# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 2012-2014 Luke Dashjr
# Copyright 2012 zefir
# Copyright 2011-2013 Con Kolivas
# Copyright 2013 James Z.M. Gao
# Copyright 2013-2014 Nate Woolls
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3 of the License, or (at your option)
# any later version.  See COPYING for more details.




VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = bfgminer$(EXEEXT) bfgminer-rpc$(EXEEXT)
@HAVE_WINDOWS_TRUE@am__append_1 = winhacks.h
@NEED_BFG_DRIVER_PROXY_TRUE@am__append_2 = driver-proxy.c driver-proxy.h
@USE_LIBMICROHTTPD_TRUE@am__append_3 = httpsrv.c httpsrv.h driver-getwork.c
@USE_LIBMICROHTTPD_TRUE@am__append_4 = $(libmicrohttpd_LIBS)
@USE_LIBMICROHTTPD_TRUE@am__append_5 = $(libmicrohttpd_LDFLAGS)
@USE_LIBMICROHTTPD_TRUE@am__append_6 = $(libmicrohttpd_CFLAGS)
@USE_LIBEVENT_TRUE@am__append_7 = driver-stratum.c
@USE_LIBEVENT_TRUE@am__append_8 = $(libevent_LIBS)
@USE_LIBEVENT_TRUE@am__append_9 = $(libevent_LDFLAGS)
@USE_LIBEVENT_TRUE@am__append_10 = $(libevent_CFLAGS)
@USE_OPENCL_TRUE@am__append_11 = driver-opencl.h driver-opencl.c ocl.c \
@USE_OPENCL_TRUE@	ocl.h findnonce.c findnonce.h adl.c adl.h \
@USE_OPENCL_TRUE@	adl_functions.h
@USE_OPENCL_TRUE@am__append_12 = README.GPU
@HAVE_SENSORS_TRUE@@USE_OPENCL_TRUE@am__append_13 = $(sensors_LIBS)
@USE_KECCAK_TRUE@am__append_14 = malgo/keccak.c
@USE_KECCAK_TRUE@@USE_OPENCL_TRUE@am__append_15 = $(top_srcdir)/opencl/keccak.cl
@USE_SHA256D_TRUE@am__append_16 = malgo/sha256d.c
@USE_OPENCL_TRUE@@USE_SHA256D_TRUE@am__append_17 = \
@USE_OPENCL_TRUE@@USE_SHA256D_TRUE@	$(top_srcdir)/opencl/diablo.cl  \
@USE_OPENCL_TRUE@@USE_SHA256D_TRUE@	$(top_srcdir)/opencl/diakgcn.cl  \
@USE_OPENCL_TRUE@@USE_SHA256D_TRUE@	$(top_srcdir)/opencl/phatk.cl  \
@USE_OPENCL_TRUE@@USE_SHA256D_TRUE@	$(top_srcdir)/opencl/poclbm.cl

@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__append_18 = \
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@		  sha256_generic.c sha256_via.c	\
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@		  sha256_cryptopp.c sha256_sse2_amd64.c		\
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@		  sha256_sse4_amd64.c 	\
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@		  sha256_altivec_4way.c

@HAVE_SSE2_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__append_19 = libsse2cpuminer.a
@HAS_YASM_TRUE@@HAVE_x86_64_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__append_20 = x86_64
@HAS_YASM_TRUE@@HAVE_x86_64_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__append_21 = x86_64/libx8664.a
@HAS_YASM_TRUE@@HAVE_x86_64_FALSE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__append_22 = x86_32
@HAS_YASM_TRUE@@HAVE_x86_64_FALSE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__append_23 = x86_32/libx8632.a
@HAS_YASM_TRUE@@HAVE_SSE2_TRUE@@HAVE_x86_64_FALSE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__append_24 = sha256_sse2_i386.c
@USE_SCRYPT_TRUE@am__append_25 = malgo/scrypt.c malgo/scrypt.h
@USE_SCRYPT_TRUE@am__append_26 = README.scrypt
@USE_OPENCL_TRUE@@USE_SCRYPT_TRUE@am__append_27 = \
@USE_OPENCL_TRUE@@USE_SCRYPT_TRUE@	$(top_srcdir)/opencl/psw.cl  \
@USE_OPENCL_TRUE@@USE_SCRYPT_TRUE@	$(top_srcdir)/opencl/scrypt.cl  \
@USE_OPENCL_TRUE@@USE_SCRYPT_TRUE@	$(top_srcdir)/opencl/zuikkis.cl

@USE_CPUMINING_TRUE@am__append_28 = README.CPU
@USE_CPUMINING_TRUE@am__append_29 = driver-cpu.h driver-cpu.c
@NEED_BFG_LOWL_VCOM_TRUE@am__append_30 = lowl-vcom.c lowl-vcom.h
@HAVE_WINDOWS_FALSE@@NEED_BFG_LOWL_VCOM_TRUE@am__append_31 = iospeeds.h iospeeds_posix.h
@HAVE_LIBUSB_TRUE@am__append_32 = lowl-usb.c lowl-usb.h
@NEED_BFG_BINLOADER_TRUE@am__append_33 = binloader.c binloader.h
@NEED_BFG_LOWLEVEL_TRUE@am__append_34 = lowlevel.c lowlevel.h
@NEED_DYNCLOCK_TRUE@am__append_35 = dynclock.c dynclock.h
@NEED_BFG_WORK2D_TRUE@am__append_36 = work2d.c work2d.h
@HAS_FPGA_TRUE@am__append_37 = README.FPGA
@HAS_ASIC_TRUE@am__append_38 = README.ASIC
@USE_ALCHEMIST_TRUE@am__append_39 = driver-alchemist.c
@USE_BITFORCE_TRUE@am__append_40 = driver-bitforce.c
@USE_BITMAIN_TRUE@am__append_41 = driver-bitmain.c driver-bitmain.h
@USE_BIGPIC_TRUE@am__append_42 = driver-bigpic.c driver-bigpic.h
@USE_DRILLBIT_TRUE@am__append_43 = driver-drillbit.c
@USE_TWINFURY_TRUE@am__append_44 = driver-twinfury.c driver-twinfury.h
@USE_ICARUS_TRUE@am__append_45 = driver-icarus.c driver-icarus.h \
@USE_ICARUS_TRUE@	driver-cairnsmore.c driver-erupter.c \
@USE_ICARUS_TRUE@	driver-antminer.c
@USE_GC3355_TRUE@am__append_46 = gc3355.c gc3355.h
@USE_GRIDSEED_TRUE@am__append_47 = driver-gridseed.c
@USE_DUALMINER_TRUE@am__append_48 = driver-dualminer.c
@USE_ZEUSMINER_TRUE@am__append_49 = driver-zeusminer.c
@USE_AVALON_TRUE@am__append_50 = driver-avalon.c driver-avalon.h
@USE_AVALONMM_TRUE@am__append_51 = driver-avalonmm.c
@USE_KNC_TRUE@am__append_52 = driver-knc.c
@USE_KNCASIC_TRUE@am__append_53 = driver-kncasic.c
@USE_KLONDIKE_TRUE@am__append_54 = driver-klondike.c driver-klondike.h driver-hashbusteravalon.c
@USE_MODMINER_TRUE@am__append_55 = driver-modminer.c
@USE_TITAN_TRUE@am__append_56 = driver-titan.c titan-asic.c titan-asic.h
@NEED_KNC_ASIC_TRUE@am__append_57 = knc-asic/knc-asic.c knc-asic/knc-spimux.c knc-asic/knc-transport-spimux.c knc-asic/include/knc-asic.h knc-asic/include/knc-transport.h
@USE_X6500_TRUE@am__append_58 = driver-x6500.c jtag.c jtag.h
@USE_ZTEX_TRUE@am__append_59 = driver-ztex.c libztex.c libztex.h
@USE_BIFURY_TRUE@am__append_60 = driver-bifury.c
@USE_BITFURY_TRUE@am__append_61 = driver-bitfury.c driver-bitfury.h libbitfury.c libbitfury.h
@USE_BFSB_TRUE@@USE_BITFURY_TRUE@am__append_62 = driver-bfsb.c
@USE_BFX_TRUE@@USE_BITFURY_TRUE@am__append_63 = driver-bfx.c
@USE_BITFURY_TRUE@@USE_METABANK_TRUE@am__append_64 = driver-metabank.c tm_i2c.h tm_i2c.c
@USE_BITFURY_TRUE@@USE_LITTLEFURY_TRUE@am__append_65 = driver-littlefury.c
@USE_BITFURY_TRUE@@USE_NANOFURY_TRUE@am__append_66 = driver-nanofury.c mcp2210.c mcp2210.h
@USE_BITFURY_TRUE@@USE_HASHBUSTER_TRUE@am__append_67 = driver-hashbuster.c
@USE_BITFURY_TRUE@@USE_HASHBUSTERUSB_TRUE@am__append_68 = driver-hashbusterusb.c
@USE_COINTERRA_TRUE@am__append_69 = driver-cointerra.c driver-cointerra.h
@USE_HASHFAST_TRUE@am__append_70 = driver-hashfast.c
@USE_JINGTIAN_TRUE@am__append_71 = driver-aan.c driver-aan.h \
@USE_JINGTIAN_TRUE@	driver-jingtian.c
@USE_MINERGATE_TRUE@am__append_72 = driver-minergate.c
@USE_MINION_TRUE@am__append_73 = driver-minion.c
@USE_ROCKMINER_TRUE@am__append_74 = driver-rockminer.c
@NEED_BFG_LOWL_FTDI_TRUE@am__append_75 = lowl-ftdi.c lowl-ftdi.h
@NEED_BFG_LOWL_HID_TRUE@am__append_76 = lowl-hid.c lowl-hid.h
@NEED_BFG_LOWL_HID_TRUE@am__append_77 = $(hidapi_CFLAGS)
@NEED_BFG_LOWL_MSWIN_TRUE@am__append_78 = lowl-mswin.c lowl-mswin.h
@NEED_BFG_LOWL_PCI_TRUE@am__append_79 = lowl-pci.c lowl-pci.h
@NEED_BFG_LOWL_PCI_TRUE@@USE_VFIO_TRUE@am__append_80 = setup-vfio
@NEED_BFG_LOWL_SPI_TRUE@am__append_81 = lowl-spi.h lowl-spi.c
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/00gnulib.m4 \
	$(top_srcdir)/m4/bundled_lib.m4 \
	$(top_srcdir)/m4/custom_subdirs.m4 \
	$(top_srcdir)/m4/extensions.m4 \
	$(top_srcdir)/m4/gnulib-common.m4 \
	$(top_srcdir)/m4/gnulib-comp.m4 \
	$(top_srcdir)/m4/include_next.m4 $(top_srcdir)/m4/longlong.m4 \
	$(top_srcdir)/m4/memchr.m4 $(top_srcdir)/m4/memmem.m4 \
	$(top_srcdir)/m4/mmap-anon.m4 $(top_srcdir)/m4/multiarch.m4 \
	$(top_srcdir)/m4/onceonly.m4 $(top_srcdir)/m4/sigaction.m4 \
	$(top_srcdir)/m4/signal_h.m4 \
	$(top_srcdir)/m4/signalblocking.m4 \
	$(top_srcdir)/m4/stddef_h.m4 $(top_srcdir)/m4/stdint.m4 \
	$(top_srcdir)/m4/string_h.m4 $(top_srcdir)/m4/strtok_r.m4 \
	$(top_srcdir)/m4/warn-on-use.m4 $(top_srcdir)/m4/wchar_t.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__dist_doc_DATA_DIST) \
	$(am__dist_kernels_DATA_DIST) $(dist_rpcexamples_DATA) \
	$(am__dist_udevrules_DATA_DIST) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = 70-bfgminer.rules
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libsse2cpuminer_a_AR = $(AR) $(ARFLAGS)
libsse2cpuminer_a_LIBADD =
am__libsse2cpuminer_a_SOURCES_DIST = sha256_4way.c sha256_sse2_i386.c
@HAS_YASM_TRUE@@HAVE_SSE2_TRUE@@HAVE_x86_64_FALSE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__objects_1 = libsse2cpuminer_a-sha256_sse2_i386.$(OBJEXT)
@HAVE_SSE2_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am_libsse2cpuminer_a_OBJECTS = libsse2cpuminer_a-sha256_4way.$(OBJEXT) \
@HAVE_SSE2_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	$(am__objects_1)
libsse2cpuminer_a_OBJECTS = $(am_libsse2cpuminer_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(sbindir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(kernelsdir)" "$(DESTDIR)$(rpcexamplesdir)" \
	"$(DESTDIR)$(udevrulesdir)"
PROGRAMS = $(bin_PROGRAMS)
am__bfgminer_SOURCES_DIST = miner.c miner.h compat.h deviceapi.c \
	deviceapi.h util.c util.h logging.h sha2.c sha2.h api.c \
	version.c version.h logging.c winhacks.h driver-proxy.c \
	driver-proxy.h httpsrv.c httpsrv.h driver-getwork.c \
	driver-stratum.c driver-opencl.h driver-opencl.c ocl.c ocl.h \
	findnonce.c findnonce.h adl.c adl.h adl_functions.h \
	malgo/keccak.c malgo/sha256d.c sha256_generic.c sha256_via.c \
	sha256_cryptopp.c sha256_sse2_amd64.c sha256_sse4_amd64.c \
	sha256_altivec_4way.c malgo/scrypt.c malgo/scrypt.h \
	driver-cpu.h driver-cpu.c lowl-vcom.c lowl-vcom.h iospeeds.h \
	iospeeds_posix.h lowl-usb.c lowl-usb.h binloader.c binloader.h \
	lowlevel.c lowlevel.h dynclock.c dynclock.h work2d.c work2d.h \
	driver-alchemist.c driver-bitforce.c driver-bitmain.c \
	driver-bitmain.h driver-bigpic.c driver-bigpic.h \
	driver-drillbit.c driver-twinfury.c driver-twinfury.h \
	driver-icarus.c driver-icarus.h driver-cairnsmore.c \
	driver-erupter.c driver-antminer.c gc3355.c gc3355.h \
	driver-gridseed.c driver-dualminer.c driver-zeusminer.c \
	driver-avalon.c driver-avalon.h driver-avalonmm.c driver-knc.c \
	driver-kncasic.c driver-klondike.c driver-klondike.h \
	driver-hashbusteravalon.c driver-modminer.c driver-titan.c \
	titan-asic.c titan-asic.h knc-asic/knc-asic.c \
	knc-asic/knc-spimux.c knc-asic/knc-transport-spimux.c \
	knc-asic/include/knc-asic.h knc-asic/include/knc-transport.h \
	driver-x6500.c jtag.c jtag.h driver-ztex.c libztex.c libztex.h \
	driver-bifury.c driver-bitfury.c driver-bitfury.h libbitfury.c \
	libbitfury.h driver-bfsb.c driver-bfx.c driver-metabank.c \
	tm_i2c.h tm_i2c.c driver-littlefury.c driver-nanofury.c \
	mcp2210.c mcp2210.h driver-hashbuster.c driver-hashbusterusb.c \
	driver-cointerra.c driver-cointerra.h driver-hashfast.c \
	driver-aan.c driver-aan.h driver-jingtian.c driver-minergate.c \
	driver-minion.c driver-rockminer.c lowl-ftdi.c lowl-ftdi.h \
	lowl-hid.c lowl-hid.h lowl-mswin.c lowl-mswin.h lowl-pci.c \
	lowl-pci.h lowl-spi.h lowl-spi.c
am__objects_2 =
@NEED_BFG_DRIVER_PROXY_TRUE@am__objects_3 =  \
@NEED_BFG_DRIVER_PROXY_TRUE@	bfgminer-driver-proxy.$(OBJEXT)
@USE_LIBMICROHTTPD_TRUE@am__objects_4 = bfgminer-httpsrv.$(OBJEXT) \
@USE_LIBMICROHTTPD_TRUE@	bfgminer-driver-getwork.$(OBJEXT)
@USE_LIBEVENT_TRUE@am__objects_5 = bfgminer-driver-stratum.$(OBJEXT)
@USE_OPENCL_TRUE@am__objects_6 = bfgminer-driver-opencl.$(OBJEXT) \
@USE_OPENCL_TRUE@	bfgminer-ocl.$(OBJEXT) \
@USE_OPENCL_TRUE@	bfgminer-findnonce.$(OBJEXT) \
@USE_OPENCL_TRUE@	bfgminer-adl.$(OBJEXT)
am__dirstamp = $(am__leading_dot)dirstamp
@USE_KECCAK_TRUE@am__objects_7 = malgo/bfgminer-keccak.$(OBJEXT)
@USE_SHA256D_TRUE@am__objects_8 = malgo/bfgminer-sha256d.$(OBJEXT)
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@am__objects_9 = bfgminer-sha256_generic.$(OBJEXT) \
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	bfgminer-sha256_via.$(OBJEXT) \
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	bfgminer-sha256_cryptopp.$(OBJEXT) \
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	bfgminer-sha256_sse2_amd64.$(OBJEXT) \
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	bfgminer-sha256_sse4_amd64.$(OBJEXT) \
@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	bfgminer-sha256_altivec_4way.$(OBJEXT)
@USE_SCRYPT_TRUE@am__objects_10 = malgo/bfgminer-scrypt.$(OBJEXT)
@USE_CPUMINING_TRUE@am__objects_11 = bfgminer-driver-cpu.$(OBJEXT)
@NEED_BFG_LOWL_VCOM_TRUE@am__objects_12 =  \
@NEED_BFG_LOWL_VCOM_TRUE@	bfgminer-lowl-vcom.$(OBJEXT)
@HAVE_LIBUSB_TRUE@am__objects_13 = bfgminer-lowl-usb.$(OBJEXT)
@NEED_BFG_BINLOADER_TRUE@am__objects_14 =  \
@NEED_BFG_BINLOADER_TRUE@	bfgminer-binloader.$(OBJEXT)
@NEED_BFG_LOWLEVEL_TRUE@am__objects_15 = bfgminer-lowlevel.$(OBJEXT)
@NEED_DYNCLOCK_TRUE@am__objects_16 = bfgminer-dynclock.$(OBJEXT)
@NEED_BFG_WORK2D_TRUE@am__objects_17 = bfgminer-work2d.$(OBJEXT)
@USE_ALCHEMIST_TRUE@am__objects_18 =  \
@USE_ALCHEMIST_TRUE@	bfgminer-driver-alchemist.$(OBJEXT)
@USE_BITFORCE_TRUE@am__objects_19 =  \
@USE_BITFORCE_TRUE@	bfgminer-driver-bitforce.$(OBJEXT)
@USE_BITMAIN_TRUE@am__objects_20 = bfgminer-driver-bitmain.$(OBJEXT)
@USE_BIGPIC_TRUE@am__objects_21 = bfgminer-driver-bigpic.$(OBJEXT)
@USE_DRILLBIT_TRUE@am__objects_22 =  \
@USE_DRILLBIT_TRUE@	bfgminer-driver-drillbit.$(OBJEXT)
@USE_TWINFURY_TRUE@am__objects_23 =  \
@USE_TWINFURY_TRUE@	bfgminer-driver-twinfury.$(OBJEXT)
@USE_ICARUS_TRUE@am__objects_24 = bfgminer-driver-icarus.$(OBJEXT) \
@USE_ICARUS_TRUE@	bfgminer-driver-cairnsmore.$(OBJEXT) \
@USE_ICARUS_TRUE@	bfgminer-driver-erupter.$(OBJEXT) \
@USE_ICARUS_TRUE@	bfgminer-driver-antminer.$(OBJEXT)
@USE_GC3355_TRUE@am__objects_25 = bfgminer-gc3355.$(OBJEXT)
@USE_GRIDSEED_TRUE@am__objects_26 =  \
@USE_GRIDSEED_TRUE@	bfgminer-driver-gridseed.$(OBJEXT)
@USE_DUALMINER_TRUE@am__objects_27 =  \
@USE_DUALMINER_TRUE@	bfgminer-driver-dualminer.$(OBJEXT)
@USE_ZEUSMINER_TRUE@am__objects_28 =  \
@USE_ZEUSMINER_TRUE@	bfgminer-driver-zeusminer.$(OBJEXT)
@USE_AVALON_TRUE@am__objects_29 = bfgminer-driver-avalon.$(OBJEXT)
@USE_AVALONMM_TRUE@am__objects_30 =  \
@USE_AVALONMM_TRUE@	bfgminer-driver-avalonmm.$(OBJEXT)
@USE_KNC_TRUE@am__objects_31 = bfgminer-driver-knc.$(OBJEXT)
@USE_KNCASIC_TRUE@am__objects_32 = bfgminer-driver-kncasic.$(OBJEXT)
@USE_KLONDIKE_TRUE@am__objects_33 =  \
@USE_KLONDIKE_TRUE@	bfgminer-driver-klondike.$(OBJEXT) \
@USE_KLONDIKE_TRUE@	bfgminer-driver-hashbusteravalon.$(OBJEXT)
@USE_MODMINER_TRUE@am__objects_34 =  \
@USE_MODMINER_TRUE@	bfgminer-driver-modminer.$(OBJEXT)
@USE_TITAN_TRUE@am__objects_35 = bfgminer-driver-titan.$(OBJEXT) \
@USE_TITAN_TRUE@	bfgminer-titan-asic.$(OBJEXT)
@NEED_KNC_ASIC_TRUE@am__objects_36 =  \
@NEED_KNC_ASIC_TRUE@	knc-asic/bfgminer-knc-asic.$(OBJEXT) \
@NEED_KNC_ASIC_TRUE@	knc-asic/bfgminer-knc-spimux.$(OBJEXT) \
@NEED_KNC_ASIC_TRUE@	knc-asic/bfgminer-knc-transport-spimux.$(OBJEXT)
@USE_X6500_TRUE@am__objects_37 = bfgminer-driver-x6500.$(OBJEXT) \
@USE_X6500_TRUE@	bfgminer-jtag.$(OBJEXT)
@USE_ZTEX_TRUE@am__objects_38 = bfgminer-driver-ztex.$(OBJEXT) \
@USE_ZTEX_TRUE@	bfgminer-libztex.$(OBJEXT)
@USE_BIFURY_TRUE@am__objects_39 = bfgminer-driver-bifury.$(OBJEXT)
@USE_BITFURY_TRUE@am__objects_40 = bfgminer-driver-bitfury.$(OBJEXT) \
@USE_BITFURY_TRUE@	bfgminer-libbitfury.$(OBJEXT)
@USE_BFSB_TRUE@@USE_BITFURY_TRUE@am__objects_41 = bfgminer-driver-bfsb.$(OBJEXT)
@USE_BFX_TRUE@@USE_BITFURY_TRUE@am__objects_42 =  \
@USE_BFX_TRUE@@USE_BITFURY_TRUE@	bfgminer-driver-bfx.$(OBJEXT)
@USE_BITFURY_TRUE@@USE_METABANK_TRUE@am__objects_43 = bfgminer-driver-metabank.$(OBJEXT) \
@USE_BITFURY_TRUE@@USE_METABANK_TRUE@	bfgminer-tm_i2c.$(OBJEXT)
@USE_BITFURY_TRUE@@USE_LITTLEFURY_TRUE@am__objects_44 = bfgminer-driver-littlefury.$(OBJEXT)
@USE_BITFURY_TRUE@@USE_NANOFURY_TRUE@am__objects_45 = bfgminer-driver-nanofury.$(OBJEXT) \
@USE_BITFURY_TRUE@@USE_NANOFURY_TRUE@	bfgminer-mcp2210.$(OBJEXT)
@USE_BITFURY_TRUE@@USE_HASHBUSTER_TRUE@am__objects_46 = bfgminer-driver-hashbuster.$(OBJEXT)
@USE_BITFURY_TRUE@@USE_HASHBUSTERUSB_TRUE@am__objects_47 = bfgminer-driver-hashbusterusb.$(OBJEXT)
@USE_COINTERRA_TRUE@am__objects_48 =  \
@USE_COINTERRA_TRUE@	bfgminer-driver-cointerra.$(OBJEXT)
@USE_HASHFAST_TRUE@am__objects_49 =  \
@USE_HASHFAST_TRUE@	bfgminer-driver-hashfast.$(OBJEXT)
@USE_JINGTIAN_TRUE@am__objects_50 = bfgminer-driver-aan.$(OBJEXT) \
@USE_JINGTIAN_TRUE@	bfgminer-driver-jingtian.$(OBJEXT)
@USE_MINERGATE_TRUE@am__objects_51 =  \
@USE_MINERGATE_TRUE@	bfgminer-driver-minergate.$(OBJEXT)
@USE_MINION_TRUE@am__objects_52 = bfgminer-driver-minion.$(OBJEXT)
@USE_ROCKMINER_TRUE@am__objects_53 =  \
@USE_ROCKMINER_TRUE@	bfgminer-driver-rockminer.$(OBJEXT)
@NEED_BFG_LOWL_FTDI_TRUE@am__objects_54 =  \
@NEED_BFG_LOWL_FTDI_TRUE@	bfgminer-lowl-ftdi.$(OBJEXT)
@NEED_BFG_LOWL_HID_TRUE@am__objects_55 = bfgminer-lowl-hid.$(OBJEXT)
@NEED_BFG_LOWL_MSWIN_TRUE@am__objects_56 =  \
@NEED_BFG_LOWL_MSWIN_TRUE@	bfgminer-lowl-mswin.$(OBJEXT)
@NEED_BFG_LOWL_PCI_TRUE@am__objects_57 = bfgminer-lowl-pci.$(OBJEXT)
@NEED_BFG_LOWL_SPI_TRUE@am__objects_58 = bfgminer-lowl-spi.$(OBJEXT)
am_bfgminer_OBJECTS = bfgminer-miner.$(OBJEXT) \
	bfgminer-deviceapi.$(OBJEXT) bfgminer-util.$(OBJEXT) \
	bfgminer-sha2.$(OBJEXT) bfgminer-api.$(OBJEXT) \
	bfgminer-version.$(OBJEXT) bfgminer-logging.$(OBJEXT) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12) $(am__objects_2) \
	$(am__objects_13) $(am__objects_14) $(am__objects_15) \
	$(am__objects_16) $(am__objects_17) $(am__objects_18) \
	$(am__objects_19) $(am__objects_20) $(am__objects_21) \
	$(am__objects_22) $(am__objects_23) $(am__objects_24) \
	$(am__objects_25) $(am__objects_26) $(am__objects_27) \
	$(am__objects_28) $(am__objects_29) $(am__objects_30) \
	$(am__objects_31) $(am__objects_32) $(am__objects_33) \
	$(am__objects_34) $(am__objects_35) $(am__objects_36) \
	$(am__objects_37) $(am__objects_38) $(am__objects_39) \
	$(am__objects_40) $(am__objects_41) $(am__objects_42) \
	$(am__objects_43) $(am__objects_44) $(am__objects_45) \
	$(am__objects_46) $(am__objects_47) $(am__objects_48) \
	$(am__objects_49) $(am__objects_50) $(am__objects_51) \
	$(am__objects_52) $(am__objects_53) $(am__objects_54) \
	$(am__objects_55) $(am__objects_56) $(am__objects_57) \
	$(am__objects_58)
bfgminer_OBJECTS = $(am_bfgminer_OBJECTS)
am__DEPENDENCIES_1 =
@USE_LIBMICROHTTPD_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@USE_LIBEVENT_TRUE@am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
@HAVE_SENSORS_TRUE@@USE_OPENCL_TRUE@am__DEPENDENCIES_4 =  \
@HAVE_SENSORS_TRUE@@USE_OPENCL_TRUE@	$(am__DEPENDENCIES_1)
bfgminer_DEPENDENCIES = lib/libgnu.a ccan.bfg/libccan.a \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) $(am__append_19) \
	$(am__append_21) $(am__append_23)
bfgminer_LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(bfgminer_LDFLAGS) \
	$(LDFLAGS) -o $@
am_bfgminer_rpc_OBJECTS = api-example.$(OBJEXT)
bfgminer_rpc_OBJECTS = $(am_bfgminer_rpc_OBJECTS)
bfgminer_rpc_DEPENDENCIES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS) $(sbin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libsse2cpuminer_a_SOURCES) $(bfgminer_SOURCES) \
	$(bfgminer_rpc_SOURCES)
DIST_SOURCES = $(am__libsse2cpuminer_a_SOURCES_DIST) \
	$(am__bfgminer_SOURCES_DIST) $(bfgminer_rpc_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__dist_doc_DATA_DIST = AUTHORS COPYING HACKING NEWS README \
	example.conf README.RPC README.GPU README.scrypt README.CPU \
	README.FPGA README.ASIC
am__dist_kernels_DATA_DIST = $(top_srcdir)/opencl/keccak.cl \
	$(top_srcdir)/opencl/diablo.cl $(top_srcdir)/opencl/diakgcn.cl \
	$(top_srcdir)/opencl/phatk.cl $(top_srcdir)/opencl/poclbm.cl \
	$(top_srcdir)/opencl/psw.cl $(top_srcdir)/opencl/scrypt.cl \
	$(top_srcdir)/opencl/zuikkis.cl
am__dist_udevrules_DATA_DIST = 70-bfgminer.rules
DATA = $(dist_doc_DATA) $(dist_kernels_DATA) $(dist_rpcexamples_DATA) \
	$(dist_udevrules_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope check recheck distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.sh.log=.log)
SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
SH_LOG_COMPILE = $(SH_LOG_COMPILER) $(AM_SH_LOG_FLAGS) $(SH_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
DIST_SUBDIRS = lib ccan.bfg @libbase58_SUBDIRS@ @libblkmaker_SUBDIRS@ \
	x86_64 x86_32
am__DIST_COMMON = $(srcdir)/70-bfgminer.rules.in $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in AUTHORS COPYING ChangeLog NEWS README \
	compile config.guess config.sub depcomp install-sh missing \
	test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
APPLE_UNIVERSAL_BUILD = @APPLE_UNIVERSAL_BUILD@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUTOSCAN_CPPFLAGS = @AUTOSCAN_CPPFLAGS@
AUTOSCAN_LIBS = @AUTOSCAN_LIBS@
AWK = @AWK@
BITSIZEOF_PTRDIFF_T = @BITSIZEOF_PTRDIFF_T@
BITSIZEOF_SIG_ATOMIC_T = @BITSIZEOF_SIG_ATOMIC_T@
BITSIZEOF_SIZE_T = @BITSIZEOF_SIZE_T@
BITSIZEOF_WCHAR_T = @BITSIZEOF_WCHAR_T@
BITSIZEOF_WINT_T = @BITSIZEOF_WINT_T@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLOPEN_FLAGS = @DLOPEN_FLAGS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GNULIB_MBSCASECMP = @GNULIB_MBSCASECMP@
GNULIB_MBSCASESTR = @GNULIB_MBSCASESTR@
GNULIB_MBSCHR = @GNULIB_MBSCHR@
GNULIB_MBSCSPN = @GNULIB_MBSCSPN@
GNULIB_MBSLEN = @GNULIB_MBSLEN@
GNULIB_MBSNCASECMP = @GNULIB_MBSNCASECMP@
GNULIB_MBSNLEN = @GNULIB_MBSNLEN@
GNULIB_MBSPBRK = @GNULIB_MBSPBRK@
GNULIB_MBSPCASECMP = @GNULIB_MBSPCASECMP@
GNULIB_MBSRCHR = @GNULIB_MBSRCHR@
GNULIB_MBSSEP = @GNULIB_MBSSEP@
GNULIB_MBSSPN = @GNULIB_MBSSPN@
GNULIB_MBSSTR = @GNULIB_MBSSTR@
GNULIB_MBSTOK_R = @GNULIB_MBSTOK_R@
GNULIB_MEMCHR = @GNULIB_MEMCHR@
GNULIB_MEMMEM = @GNULIB_MEMMEM@
GNULIB_MEMPCPY = @GNULIB_MEMPCPY@
GNULIB_MEMRCHR = @GNULIB_MEMRCHR@
GNULIB_RAWMEMCHR = @GNULIB_RAWMEMCHR@
GNULIB_SIGACTION = @GNULIB_SIGACTION@
GNULIB_SIGNAL_H_SIGPIPE = @GNULIB_SIGNAL_H_SIGPIPE@
GNULIB_SIGPROCMASK = @GNULIB_SIGPROCMASK@
GNULIB_STPCPY = @GNULIB_STPCPY@
GNULIB_STPNCPY = @GNULIB_STPNCPY@
GNULIB_STRCASESTR = @GNULIB_STRCASESTR@
GNULIB_STRCHRNUL = @GNULIB_STRCHRNUL@
GNULIB_STRDUP = @GNULIB_STRDUP@
GNULIB_STRERROR = @GNULIB_STRERROR@
GNULIB_STRERROR_R = @GNULIB_STRERROR_R@
GNULIB_STRNCAT = @GNULIB_STRNCAT@
GNULIB_STRNDUP = @GNULIB_STRNDUP@
GNULIB_STRNLEN = @GNULIB_STRNLEN@
GNULIB_STRPBRK = @GNULIB_STRPBRK@
GNULIB_STRSEP = @GNULIB_STRSEP@
GNULIB_STRSIGNAL = @GNULIB_STRSIGNAL@
GNULIB_STRSTR = @GNULIB_STRSTR@
GNULIB_STRTOK_R = @GNULIB_STRTOK_R@
GNULIB_STRVERSCMP = @GNULIB_STRVERSCMP@
GREP = @GREP@
HAVE_DECL_MEMMEM = @HAVE_DECL_MEMMEM@
HAVE_DECL_MEMRCHR = @HAVE_DECL_MEMRCHR@
HAVE_DECL_STRDUP = @HAVE_DECL_STRDUP@
HAVE_DECL_STRERROR_R = @HAVE_DECL_STRERROR_R@
HAVE_DECL_STRNDUP = @HAVE_DECL_STRNDUP@
HAVE_DECL_STRNLEN = @HAVE_DECL_STRNLEN@
HAVE_DECL_STRSIGNAL = @HAVE_DECL_STRSIGNAL@
HAVE_DECL_STRTOK_R = @HAVE_DECL_STRTOK_R@
HAVE_INTTYPES_H = @HAVE_INTTYPES_H@
HAVE_LONG_LONG_INT = @HAVE_LONG_LONG_INT@
HAVE_MBSLEN = @HAVE_MBSLEN@
HAVE_MEMCHR = @HAVE_MEMCHR@
HAVE_MEMPCPY = @HAVE_MEMPCPY@
HAVE_POSIX_SIGNALBLOCKING = @HAVE_POSIX_SIGNALBLOCKING@
HAVE_RAWMEMCHR = @HAVE_RAWMEMCHR@
HAVE_SIGACTION = @HAVE_SIGACTION@
HAVE_SIGHANDLER_T = @HAVE_SIGHANDLER_T@
HAVE_SIGINFO_T = @HAVE_SIGINFO_T@
HAVE_SIGNED_SIG_ATOMIC_T = @HAVE_SIGNED_SIG_ATOMIC_T@
HAVE_SIGNED_WCHAR_T = @HAVE_SIGNED_WCHAR_T@
HAVE_SIGNED_WINT_T = @HAVE_SIGNED_WINT_T@
HAVE_SIGSET_T = @HAVE_SIGSET_T@
HAVE_STDINT_H = @HAVE_STDINT_H@
HAVE_STPCPY = @HAVE_STPCPY@
HAVE_STPNCPY = @HAVE_STPNCPY@
HAVE_STRCASESTR = @HAVE_STRCASESTR@
HAVE_STRCHRNUL = @HAVE_STRCHRNUL@
HAVE_STRPBRK = @HAVE_STRPBRK@
HAVE_STRSEP = @HAVE_STRSEP@
HAVE_STRUCT_SIGACTION_SA_SIGACTION = @HAVE_STRUCT_SIGACTION_SA_SIGACTION@
HAVE_STRVERSCMP = @HAVE_STRVERSCMP@
HAVE_SYS_BITYPES_H = @HAVE_SYS_BITYPES_H@
HAVE_SYS_INTTYPES_H = @HAVE_SYS_INTTYPES_H@
HAVE_SYS_TYPES_H = @HAVE_SYS_TYPES_H@
HAVE_TYPE_VOLATILE_SIG_ATOMIC_T = @HAVE_TYPE_VOLATILE_SIG_ATOMIC_T@
HAVE_UNSIGNED_LONG_LONG_INT = @HAVE_UNSIGNED_LONG_LONG_INT@
HAVE_WCHAR_H = @HAVE_WCHAR_H@
HAVE_WCHAR_T = @HAVE_WCHAR_T@
INCLUDE_NEXT = @INCLUDE_NEXT@
INCLUDE_NEXT_AS_FIRST_DIRECTIVE = @INCLUDE_NEXT_AS_FIRST_DIRECTIVE@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JANSSON_CFLAGS = @JANSSON_CFLAGS@
JANSSON_LIBS = @JANSSON_LIBS@
LDCONFIG = @LDCONFIG@
LDFLAGS = @LDFLAGS@
LIBCURL_CFLAGS = @LIBCURL_CFLAGS@
LIBCURL_LIBS = @LIBCURL_LIBS@
LIBGNU_LIBDEPS = @LIBGNU_LIBDEPS@
LIBGNU_LTLIBDEPS = @LIBGNU_LTLIBDEPS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBUSB_CFLAGS = @LIBUSB_CFLAGS@
LIBUSB_LIBS = @LIBUSB_LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MATH_LIBS = @MATH_LIBS@
MKDIR_P = @MKDIR_P@
MM_LIBS = @MM_LIBS@
NCURSES_CPPFLAGS = @NCURSES_CPPFLAGS@
NCURSES_LIBS = @NCURSES_LIBS@
NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H = @NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H@
NEXT_AS_FIRST_DIRECTIVE_STDDEF_H = @NEXT_AS_FIRST_DIRECTIVE_STDDEF_H@
NEXT_AS_FIRST_DIRECTIVE_STDINT_H = @NEXT_AS_FIRST_DIRECTIVE_STDINT_H@
NEXT_AS_FIRST_DIRECTIVE_STRING_H = @NEXT_AS_FIRST_DIRECTIVE_STRING_H@
NEXT_SIGNAL_H = @NEXT_SIGNAL_H@
NEXT_STDDEF_H = @NEXT_STDDEF_H@
NEXT_STDINT_H = @NEXT_STDINT_H@
NEXT_STRING_H = @NEXT_STRING_H@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDCURSES_LIBS = @PDCURSES_LIBS@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PRAGMA_COLUMNS = @PRAGMA_COLUMNS@
PRAGMA_SYSTEM_HEADER = @PRAGMA_SYSTEM_HEADER@
PTHREAD_FLAGS = @PTHREAD_FLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
PTRDIFF_T_SUFFIX = @PTRDIFF_T_SUFFIX@
RANLIB = @RANLIB@
REPLACE_MEMCHR = @REPLACE_MEMCHR@
REPLACE_MEMMEM = @REPLACE_MEMMEM@
REPLACE_NULL = @REPLACE_NULL@
REPLACE_STPNCPY = @REPLACE_STPNCPY@
REPLACE_STRCASESTR = @REPLACE_STRCASESTR@
REPLACE_STRCHRNUL = @REPLACE_STRCHRNUL@
REPLACE_STRDUP = @REPLACE_STRDUP@
REPLACE_STRERROR = @REPLACE_STRERROR@
REPLACE_STRERROR_R = @REPLACE_STRERROR_R@
REPLACE_STRNCAT = @REPLACE_STRNCAT@
REPLACE_STRNDUP = @REPLACE_STRNDUP@
REPLACE_STRNLEN = @REPLACE_STRNLEN@
REPLACE_STRSIGNAL = @REPLACE_STRSIGNAL@
REPLACE_STRSTR = @REPLACE_STRSTR@
REPLACE_STRTOK_R = @REPLACE_STRTOK_R@
RT_LIBS = @RT_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIG_ATOMIC_T_SUFFIX = @SIG_ATOMIC_T_SUFFIX@
SIZE_T_SUFFIX = @SIZE_T_SUFFIX@
SSE2_CFLAGS = @SSE2_CFLAGS@
STDDEF_H = @STDDEF_H@
STDINT_H = @STDINT_H@
STRIP = @STRIP@
UDEVRULES_GROUP = @UDEVRULES_GROUP@
UDEV_LIBS = @UDEV_LIBS@
UNDEFINE_STRTOK_R = @UNDEFINE_STRTOK_R@
VERSION = @VERSION@
VMAJ = @VMAJ@
WCHAR_T_SUFFIX = @WCHAR_T_SUFFIX@
WINT_T_SUFFIX = @WINT_T_SUFFIX@
WS2_LIBS = @WS2_LIBS@
YASM = @YASM@
YASM_FMT = @YASM_FMT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gl_LIBOBJS = @gl_LIBOBJS@
gl_LTLIBOBJS = @gl_LTLIBOBJS@
gltests_LIBOBJS = @gltests_LIBOBJS@
gltests_LTLIBOBJS = @gltests_LTLIBOBJS@
gltests_WITNESS = @gltests_WITNESS@
hidapi_CFLAGS = @hidapi_CFLAGS@
hidapi_LIBS = @hidapi_LIBS@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libbase58_CFLAGS = @libbase58_CFLAGS@
libbase58_EXTRADEPS = @libbase58_EXTRADEPS@
libbase58_LIBS = @libbase58_LIBS@
libbase58_SUBDIRS = @libbase58_SUBDIRS@
libblkmaker_CFLAGS = @libblkmaker_CFLAGS@
libblkmaker_EXTRADEPS = @libblkmaker_EXTRADEPS@
libblkmaker_LIBS = @libblkmaker_LIBS@
libblkmaker_SUBDIRS = @libblkmaker_SUBDIRS@
libdir = @libdir@
libevent_CFLAGS = @libevent_CFLAGS@
libevent_LIBS = @libevent_LIBS@
libexecdir = @libexecdir@
libmicrohttpd_CFLAGS = @libmicrohttpd_CFLAGS@
libmicrohttpd_LIBS = @libmicrohttpd_LIBS@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
release_info = @release_info@
sbindir = @sbindir@
sensors_LIBS = @sensors_LIBS@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
udevrulesdir = @udevrulesdir@
version_info = @version_info@
ACLOCAL_AMFLAGS = -I m4
EXTRA_DIST = m4/gnulib-cache.m4 linux-usb-bfgminer windows-build.txt \
	test-bfgminer.sh
dist_doc_DATA = AUTHORS COPYING HACKING NEWS README example.conf \
	README.RPC $(am__append_12) $(am__append_26) $(am__append_28) \
	$(am__append_37) $(am__append_38)
rpcexamplesdir = $(docdir)/rpc-examples
dist_rpcexamples_DATA = \
		  api-example.php miner.php \
		  api-example.c \
                  api-example.py

SUBDIRS = lib ccan.bfg $(libbase58_SUBDIRS) $(libblkmaker_SUBDIRS) \
	$(am__append_20) $(am__append_22)
INCLUDES = -fno-strict-aliasing
sbin_SCRIPTS = $(am__append_80)
@HAVE_WINDOWS_FALSE@bin_SCRIPTS = start-bfgminer.sh

# first, our own stuff

# second, potentially embedded libs
bfgminer_LDADD = lib/libgnu.a ccan.bfg/libccan.a $(libbase58_LIBS) \
	$(libblkmaker_LIBS) $(DLOPEN_FLAGS) @LIBCURL_LIBS@ \
	@JANSSON_LIBS@ @PTHREAD_LIBS@ @NCURSES_LIBS@ @PDCURSES_LIBS@ \
	@WS2_LIBS@ @UDEV_LIBS@ @LIBUSB_LIBS@ @MM_LIBS@ @RT_LIBS@ \
	$(MATH_LIBS) $(AUTOSCAN_LIBS) $(am__append_4) $(am__append_8) \
	$(am__append_13) $(am__append_19) $(am__append_21) \
	$(am__append_23)

# finally, everything else
bfgminer_LDFLAGS = $(PTHREAD_FLAGS) $(am__append_5) $(am__append_9)
bfgminer_CPPFLAGS = -I$(top_builddir)/lib -I$(top_srcdir)/lib \
	-I$(top_srcdir)/ccan-upstream $(libbase58_CFLAGS) \
	$(libblkmaker_CFLAGS) @LIBUSB_CFLAGS@ @LIBCURL_CFLAGS@ \
	-DCGMINER_PREFIX='"$(pkgdatadir)"' @JANSSON_CFLAGS@ \
	$(PTHREAD_FLAGS) $(NCURSES_CPPFLAGS) $(AUTOSCAN_CPPFLAGS) \
	$(am__append_6) $(am__append_10) $(am__append_77)

# common sources
bfgminer_SOURCES := miner.c miner.h compat.h deviceapi.c deviceapi.h \
	util.c util.h logging.h sha2.c sha2.h api.c version.c \
	version.h logging.c $(am__append_1) $(am__append_2) \
	$(am__append_3) $(am__append_7) $(am__append_11) \
	$(am__append_14) $(am__append_16) $(am__append_18) \
	$(am__append_25) $(am__append_29) $(am__append_30) \
	$(am__append_31) $(am__append_32) $(am__append_33) \
	$(am__append_34) $(am__append_35) $(am__append_36) \
	$(am__append_39) $(am__append_40) $(am__append_41) \
	$(am__append_42) $(am__append_43) $(am__append_44) \
	$(am__append_45) $(am__append_46) $(am__append_47) \
	$(am__append_48) $(am__append_49) $(am__append_50) \
	$(am__append_51) $(am__append_52) $(am__append_53) \
	$(am__append_54) $(am__append_55) $(am__append_56) \
	$(am__append_57) $(am__append_58) $(am__append_59) \
	$(am__append_60) $(am__append_61) $(am__append_62) \
	$(am__append_63) $(am__append_64) $(am__append_65) \
	$(am__append_66) $(am__append_67) $(am__append_68) \
	$(am__append_69) $(am__append_70) $(am__append_71) \
	$(am__append_72) $(am__append_73) $(am__append_74) \
	$(am__append_75) $(am__append_76) $(am__append_78) \
	$(am__append_79) $(am__append_81)
EXTRA_bfgminer_DEPENDENCIES = $(libbase58_EXTRADEPS) \
	$(libblkmaker_EXTRADEPS)
TESTS = test-bfgminer.sh
SH_LOG_COMPILER = /bin/sh
AM_TESTS_ENVIRONMENT = PATH='$(srcdir)':"$$PATH"; export PATH;
TESTS_ENVIRONMENT = $(AM_TESTS_ENVIRONMENT)
TEST_EXTENSIONS = .sh
BUILT_SOURCES = version.h
@USE_UDEVRULES_TRUE@dist_udevrules_DATA = 70-bfgminer.rules
@USE_OPENCL_TRUE@kernelsdir = $(pkgdatadir)/opencl
@USE_OPENCL_TRUE@dist_kernels_DATA = $(am__append_15) $(am__append_17) \
@USE_OPENCL_TRUE@	$(am__append_27)
@HAVE_SSE2_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@noinst_LIBRARIES = libsse2cpuminer.a
@HAVE_SSE2_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@libsse2cpuminer_a_SOURCES = sha256_4way.c \
@HAVE_SSE2_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	$(am__append_24)
@HAVE_SSE2_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@libsse2cpuminer_a_CFLAGS = $(bfgminer_CPPFLAGS) $(SSE2_CFLAGS)
@HAS_YASM_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@AM_CFLAGS = -DHAS_YASM
bfgminer_rpc_SOURCES = api-example.c
bfgminer_rpc_LDADD = @WS2_LIBS@
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .log .o .obj .sh .sh$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
70-bfgminer.rules: $(top_builddir)/config.status $(srcdir)/70-bfgminer.rules.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libsse2cpuminer.a: $(libsse2cpuminer_a_OBJECTS) $(libsse2cpuminer_a_DEPENDENCIES) $(EXTRA_libsse2cpuminer_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libsse2cpuminer.a
	$(AM_V_AR)$(libsse2cpuminer_a_AR) libsse2cpuminer.a $(libsse2cpuminer_a_OBJECTS) $(libsse2cpuminer_a_LIBADD)
	$(AM_V_at)$(RANLIB) libsse2cpuminer.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
malgo/$(am__dirstamp):
	@$(MKDIR_P) malgo
	@: > malgo/$(am__dirstamp)
malgo/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) malgo/$(DEPDIR)
	@: > malgo/$(DEPDIR)/$(am__dirstamp)
malgo/bfgminer-keccak.$(OBJEXT): malgo/$(am__dirstamp) \
	malgo/$(DEPDIR)/$(am__dirstamp)
malgo/bfgminer-sha256d.$(OBJEXT): malgo/$(am__dirstamp) \
	malgo/$(DEPDIR)/$(am__dirstamp)
malgo/bfgminer-scrypt.$(OBJEXT): malgo/$(am__dirstamp) \
	malgo/$(DEPDIR)/$(am__dirstamp)
knc-asic/$(am__dirstamp):
	@$(MKDIR_P) knc-asic
	@: > knc-asic/$(am__dirstamp)
knc-asic/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) knc-asic/$(DEPDIR)
	@: > knc-asic/$(DEPDIR)/$(am__dirstamp)
knc-asic/bfgminer-knc-asic.$(OBJEXT): knc-asic/$(am__dirstamp) \
	knc-asic/$(DEPDIR)/$(am__dirstamp)
knc-asic/bfgminer-knc-spimux.$(OBJEXT): knc-asic/$(am__dirstamp) \
	knc-asic/$(DEPDIR)/$(am__dirstamp)
knc-asic/bfgminer-knc-transport-spimux.$(OBJEXT):  \
	knc-asic/$(am__dirstamp) knc-asic/$(DEPDIR)/$(am__dirstamp)

bfgminer$(EXEEXT): $(bfgminer_OBJECTS) $(bfgminer_DEPENDENCIES) $(EXTRA_bfgminer_DEPENDENCIES) 
	@rm -f bfgminer$(EXEEXT)
	$(AM_V_CCLD)$(bfgminer_LINK) $(bfgminer_OBJECTS) $(bfgminer_LDADD) $(LIBS)

bfgminer-rpc$(EXEEXT): $(bfgminer_rpc_OBJECTS) $(bfgminer_rpc_DEPENDENCIES) $(EXTRA_bfgminer_rpc_DEPENDENCIES) 
	@rm -f bfgminer-rpc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bfgminer_rpc_OBJECTS) $(bfgminer_rpc_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-sbinSCRIPTS: $(sbin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_SCRIPTS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-sbinSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_SCRIPTS)'; test -n "$(sbindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(sbindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f knc-asic/*.$(OBJEXT)
	-rm -f malgo/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/api-example.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-adl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-api.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-binloader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-deviceapi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-aan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-alchemist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-antminer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-avalon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-avalonmm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-bfsb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-bfx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-bifury.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-bigpic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-bitforce.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-bitfury.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-bitmain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-cairnsmore.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-cointerra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-cpu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-drillbit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-dualminer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-erupter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-getwork.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-gridseed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-hashbuster.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-hashbusteravalon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-hashbusterusb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-hashfast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-icarus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-jingtian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-klondike.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-knc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-kncasic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-littlefury.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-metabank.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-minergate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-minion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-modminer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-nanofury.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-opencl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-proxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-rockminer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-stratum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-titan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-twinfury.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-x6500.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-zeusminer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-driver-ztex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-dynclock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-findnonce.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-gc3355.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-httpsrv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-jtag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-libbitfury.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-libztex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-logging.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-lowl-ftdi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-lowl-hid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-lowl-mswin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-lowl-pci.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-lowl-spi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-lowl-usb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-lowl-vcom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-lowlevel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-mcp2210.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-miner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-ocl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-sha2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-sha256_altivec_4way.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-sha256_cryptopp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-sha256_generic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-sha256_sse2_amd64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-sha256_sse4_amd64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-sha256_via.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-titan-asic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-tm_i2c.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bfgminer-work2d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsse2cpuminer_a-sha256_4way.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsse2cpuminer_a-sha256_sse2_i386.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@knc-asic/$(DEPDIR)/bfgminer-knc-asic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@knc-asic/$(DEPDIR)/bfgminer-knc-spimux.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@knc-asic/$(DEPDIR)/bfgminer-knc-transport-spimux.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@malgo/$(DEPDIR)/bfgminer-keccak.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@malgo/$(DEPDIR)/bfgminer-scrypt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@malgo/$(DEPDIR)/bfgminer-sha256d.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libsse2cpuminer_a-sha256_4way.o: sha256_4way.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsse2cpuminer_a_CFLAGS) $(CFLAGS) -MT libsse2cpuminer_a-sha256_4way.o -MD -MP -MF $(DEPDIR)/libsse2cpuminer_a-sha256_4way.Tpo -c -o libsse2cpuminer_a-sha256_4way.o `test -f 'sha256_4way.c' || echo '$(srcdir)/'`sha256_4way.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libsse2cpuminer_a-sha256_4way.Tpo $(DEPDIR)/libsse2cpuminer_a-sha256_4way.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_4way.c' object='libsse2cpuminer_a-sha256_4way.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsse2cpuminer_a_CFLAGS) $(CFLAGS) -c -o libsse2cpuminer_a-sha256_4way.o `test -f 'sha256_4way.c' || echo '$(srcdir)/'`sha256_4way.c

libsse2cpuminer_a-sha256_4way.obj: sha256_4way.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsse2cpuminer_a_CFLAGS) $(CFLAGS) -MT libsse2cpuminer_a-sha256_4way.obj -MD -MP -MF $(DEPDIR)/libsse2cpuminer_a-sha256_4way.Tpo -c -o libsse2cpuminer_a-sha256_4way.obj `if test -f 'sha256_4way.c'; then $(CYGPATH_W) 'sha256_4way.c'; else $(CYGPATH_W) '$(srcdir)/sha256_4way.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libsse2cpuminer_a-sha256_4way.Tpo $(DEPDIR)/libsse2cpuminer_a-sha256_4way.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_4way.c' object='libsse2cpuminer_a-sha256_4way.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsse2cpuminer_a_CFLAGS) $(CFLAGS) -c -o libsse2cpuminer_a-sha256_4way.obj `if test -f 'sha256_4way.c'; then $(CYGPATH_W) 'sha256_4way.c'; else $(CYGPATH_W) '$(srcdir)/sha256_4way.c'; fi`

libsse2cpuminer_a-sha256_sse2_i386.o: sha256_sse2_i386.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsse2cpuminer_a_CFLAGS) $(CFLAGS) -MT libsse2cpuminer_a-sha256_sse2_i386.o -MD -MP -MF $(DEPDIR)/libsse2cpuminer_a-sha256_sse2_i386.Tpo -c -o libsse2cpuminer_a-sha256_sse2_i386.o `test -f 'sha256_sse2_i386.c' || echo '$(srcdir)/'`sha256_sse2_i386.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libsse2cpuminer_a-sha256_sse2_i386.Tpo $(DEPDIR)/libsse2cpuminer_a-sha256_sse2_i386.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_sse2_i386.c' object='libsse2cpuminer_a-sha256_sse2_i386.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsse2cpuminer_a_CFLAGS) $(CFLAGS) -c -o libsse2cpuminer_a-sha256_sse2_i386.o `test -f 'sha256_sse2_i386.c' || echo '$(srcdir)/'`sha256_sse2_i386.c

libsse2cpuminer_a-sha256_sse2_i386.obj: sha256_sse2_i386.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsse2cpuminer_a_CFLAGS) $(CFLAGS) -MT libsse2cpuminer_a-sha256_sse2_i386.obj -MD -MP -MF $(DEPDIR)/libsse2cpuminer_a-sha256_sse2_i386.Tpo -c -o libsse2cpuminer_a-sha256_sse2_i386.obj `if test -f 'sha256_sse2_i386.c'; then $(CYGPATH_W) 'sha256_sse2_i386.c'; else $(CYGPATH_W) '$(srcdir)/sha256_sse2_i386.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libsse2cpuminer_a-sha256_sse2_i386.Tpo $(DEPDIR)/libsse2cpuminer_a-sha256_sse2_i386.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_sse2_i386.c' object='libsse2cpuminer_a-sha256_sse2_i386.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsse2cpuminer_a_CFLAGS) $(CFLAGS) -c -o libsse2cpuminer_a-sha256_sse2_i386.obj `if test -f 'sha256_sse2_i386.c'; then $(CYGPATH_W) 'sha256_sse2_i386.c'; else $(CYGPATH_W) '$(srcdir)/sha256_sse2_i386.c'; fi`

bfgminer-miner.o: miner.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-miner.o -MD -MP -MF $(DEPDIR)/bfgminer-miner.Tpo -c -o bfgminer-miner.o `test -f 'miner.c' || echo '$(srcdir)/'`miner.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-miner.Tpo $(DEPDIR)/bfgminer-miner.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='miner.c' object='bfgminer-miner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-miner.o `test -f 'miner.c' || echo '$(srcdir)/'`miner.c

bfgminer-miner.obj: miner.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-miner.obj -MD -MP -MF $(DEPDIR)/bfgminer-miner.Tpo -c -o bfgminer-miner.obj `if test -f 'miner.c'; then $(CYGPATH_W) 'miner.c'; else $(CYGPATH_W) '$(srcdir)/miner.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-miner.Tpo $(DEPDIR)/bfgminer-miner.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='miner.c' object='bfgminer-miner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-miner.obj `if test -f 'miner.c'; then $(CYGPATH_W) 'miner.c'; else $(CYGPATH_W) '$(srcdir)/miner.c'; fi`

bfgminer-deviceapi.o: deviceapi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-deviceapi.o -MD -MP -MF $(DEPDIR)/bfgminer-deviceapi.Tpo -c -o bfgminer-deviceapi.o `test -f 'deviceapi.c' || echo '$(srcdir)/'`deviceapi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-deviceapi.Tpo $(DEPDIR)/bfgminer-deviceapi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='deviceapi.c' object='bfgminer-deviceapi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-deviceapi.o `test -f 'deviceapi.c' || echo '$(srcdir)/'`deviceapi.c

bfgminer-deviceapi.obj: deviceapi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-deviceapi.obj -MD -MP -MF $(DEPDIR)/bfgminer-deviceapi.Tpo -c -o bfgminer-deviceapi.obj `if test -f 'deviceapi.c'; then $(CYGPATH_W) 'deviceapi.c'; else $(CYGPATH_W) '$(srcdir)/deviceapi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-deviceapi.Tpo $(DEPDIR)/bfgminer-deviceapi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='deviceapi.c' object='bfgminer-deviceapi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-deviceapi.obj `if test -f 'deviceapi.c'; then $(CYGPATH_W) 'deviceapi.c'; else $(CYGPATH_W) '$(srcdir)/deviceapi.c'; fi`

bfgminer-util.o: util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-util.o -MD -MP -MF $(DEPDIR)/bfgminer-util.Tpo -c -o bfgminer-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-util.Tpo $(DEPDIR)/bfgminer-util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util.c' object='bfgminer-util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-util.o `test -f 'util.c' || echo '$(srcdir)/'`util.c

bfgminer-util.obj: util.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-util.obj -MD -MP -MF $(DEPDIR)/bfgminer-util.Tpo -c -o bfgminer-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-util.Tpo $(DEPDIR)/bfgminer-util.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='util.c' object='bfgminer-util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-util.obj `if test -f 'util.c'; then $(CYGPATH_W) 'util.c'; else $(CYGPATH_W) '$(srcdir)/util.c'; fi`

bfgminer-sha2.o: sha2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha2.o -MD -MP -MF $(DEPDIR)/bfgminer-sha2.Tpo -c -o bfgminer-sha2.o `test -f 'sha2.c' || echo '$(srcdir)/'`sha2.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha2.Tpo $(DEPDIR)/bfgminer-sha2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha2.c' object='bfgminer-sha2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha2.o `test -f 'sha2.c' || echo '$(srcdir)/'`sha2.c

bfgminer-sha2.obj: sha2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha2.obj -MD -MP -MF $(DEPDIR)/bfgminer-sha2.Tpo -c -o bfgminer-sha2.obj `if test -f 'sha2.c'; then $(CYGPATH_W) 'sha2.c'; else $(CYGPATH_W) '$(srcdir)/sha2.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha2.Tpo $(DEPDIR)/bfgminer-sha2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha2.c' object='bfgminer-sha2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha2.obj `if test -f 'sha2.c'; then $(CYGPATH_W) 'sha2.c'; else $(CYGPATH_W) '$(srcdir)/sha2.c'; fi`

bfgminer-api.o: api.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-api.o -MD -MP -MF $(DEPDIR)/bfgminer-api.Tpo -c -o bfgminer-api.o `test -f 'api.c' || echo '$(srcdir)/'`api.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-api.Tpo $(DEPDIR)/bfgminer-api.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='api.c' object='bfgminer-api.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-api.o `test -f 'api.c' || echo '$(srcdir)/'`api.c

bfgminer-api.obj: api.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-api.obj -MD -MP -MF $(DEPDIR)/bfgminer-api.Tpo -c -o bfgminer-api.obj `if test -f 'api.c'; then $(CYGPATH_W) 'api.c'; else $(CYGPATH_W) '$(srcdir)/api.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-api.Tpo $(DEPDIR)/bfgminer-api.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='api.c' object='bfgminer-api.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-api.obj `if test -f 'api.c'; then $(CYGPATH_W) 'api.c'; else $(CYGPATH_W) '$(srcdir)/api.c'; fi`

bfgminer-version.o: version.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-version.o -MD -MP -MF $(DEPDIR)/bfgminer-version.Tpo -c -o bfgminer-version.o `test -f 'version.c' || echo '$(srcdir)/'`version.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-version.Tpo $(DEPDIR)/bfgminer-version.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='version.c' object='bfgminer-version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-version.o `test -f 'version.c' || echo '$(srcdir)/'`version.c

bfgminer-version.obj: version.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-version.obj -MD -MP -MF $(DEPDIR)/bfgminer-version.Tpo -c -o bfgminer-version.obj `if test -f 'version.c'; then $(CYGPATH_W) 'version.c'; else $(CYGPATH_W) '$(srcdir)/version.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-version.Tpo $(DEPDIR)/bfgminer-version.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='version.c' object='bfgminer-version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-version.obj `if test -f 'version.c'; then $(CYGPATH_W) 'version.c'; else $(CYGPATH_W) '$(srcdir)/version.c'; fi`

bfgminer-logging.o: logging.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-logging.o -MD -MP -MF $(DEPDIR)/bfgminer-logging.Tpo -c -o bfgminer-logging.o `test -f 'logging.c' || echo '$(srcdir)/'`logging.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-logging.Tpo $(DEPDIR)/bfgminer-logging.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='logging.c' object='bfgminer-logging.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-logging.o `test -f 'logging.c' || echo '$(srcdir)/'`logging.c

bfgminer-logging.obj: logging.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-logging.obj -MD -MP -MF $(DEPDIR)/bfgminer-logging.Tpo -c -o bfgminer-logging.obj `if test -f 'logging.c'; then $(CYGPATH_W) 'logging.c'; else $(CYGPATH_W) '$(srcdir)/logging.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-logging.Tpo $(DEPDIR)/bfgminer-logging.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='logging.c' object='bfgminer-logging.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-logging.obj `if test -f 'logging.c'; then $(CYGPATH_W) 'logging.c'; else $(CYGPATH_W) '$(srcdir)/logging.c'; fi`

bfgminer-driver-proxy.o: driver-proxy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-proxy.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-proxy.Tpo -c -o bfgminer-driver-proxy.o `test -f 'driver-proxy.c' || echo '$(srcdir)/'`driver-proxy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-proxy.Tpo $(DEPDIR)/bfgminer-driver-proxy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-proxy.c' object='bfgminer-driver-proxy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-proxy.o `test -f 'driver-proxy.c' || echo '$(srcdir)/'`driver-proxy.c

bfgminer-driver-proxy.obj: driver-proxy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-proxy.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-proxy.Tpo -c -o bfgminer-driver-proxy.obj `if test -f 'driver-proxy.c'; then $(CYGPATH_W) 'driver-proxy.c'; else $(CYGPATH_W) '$(srcdir)/driver-proxy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-proxy.Tpo $(DEPDIR)/bfgminer-driver-proxy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-proxy.c' object='bfgminer-driver-proxy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-proxy.obj `if test -f 'driver-proxy.c'; then $(CYGPATH_W) 'driver-proxy.c'; else $(CYGPATH_W) '$(srcdir)/driver-proxy.c'; fi`

bfgminer-httpsrv.o: httpsrv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-httpsrv.o -MD -MP -MF $(DEPDIR)/bfgminer-httpsrv.Tpo -c -o bfgminer-httpsrv.o `test -f 'httpsrv.c' || echo '$(srcdir)/'`httpsrv.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-httpsrv.Tpo $(DEPDIR)/bfgminer-httpsrv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='httpsrv.c' object='bfgminer-httpsrv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-httpsrv.o `test -f 'httpsrv.c' || echo '$(srcdir)/'`httpsrv.c

bfgminer-httpsrv.obj: httpsrv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-httpsrv.obj -MD -MP -MF $(DEPDIR)/bfgminer-httpsrv.Tpo -c -o bfgminer-httpsrv.obj `if test -f 'httpsrv.c'; then $(CYGPATH_W) 'httpsrv.c'; else $(CYGPATH_W) '$(srcdir)/httpsrv.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-httpsrv.Tpo $(DEPDIR)/bfgminer-httpsrv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='httpsrv.c' object='bfgminer-httpsrv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-httpsrv.obj `if test -f 'httpsrv.c'; then $(CYGPATH_W) 'httpsrv.c'; else $(CYGPATH_W) '$(srcdir)/httpsrv.c'; fi`

bfgminer-driver-getwork.o: driver-getwork.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-getwork.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-getwork.Tpo -c -o bfgminer-driver-getwork.o `test -f 'driver-getwork.c' || echo '$(srcdir)/'`driver-getwork.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-getwork.Tpo $(DEPDIR)/bfgminer-driver-getwork.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-getwork.c' object='bfgminer-driver-getwork.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-getwork.o `test -f 'driver-getwork.c' || echo '$(srcdir)/'`driver-getwork.c

bfgminer-driver-getwork.obj: driver-getwork.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-getwork.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-getwork.Tpo -c -o bfgminer-driver-getwork.obj `if test -f 'driver-getwork.c'; then $(CYGPATH_W) 'driver-getwork.c'; else $(CYGPATH_W) '$(srcdir)/driver-getwork.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-getwork.Tpo $(DEPDIR)/bfgminer-driver-getwork.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-getwork.c' object='bfgminer-driver-getwork.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-getwork.obj `if test -f 'driver-getwork.c'; then $(CYGPATH_W) 'driver-getwork.c'; else $(CYGPATH_W) '$(srcdir)/driver-getwork.c'; fi`

bfgminer-driver-stratum.o: driver-stratum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-stratum.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-stratum.Tpo -c -o bfgminer-driver-stratum.o `test -f 'driver-stratum.c' || echo '$(srcdir)/'`driver-stratum.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-stratum.Tpo $(DEPDIR)/bfgminer-driver-stratum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-stratum.c' object='bfgminer-driver-stratum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-stratum.o `test -f 'driver-stratum.c' || echo '$(srcdir)/'`driver-stratum.c

bfgminer-driver-stratum.obj: driver-stratum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-stratum.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-stratum.Tpo -c -o bfgminer-driver-stratum.obj `if test -f 'driver-stratum.c'; then $(CYGPATH_W) 'driver-stratum.c'; else $(CYGPATH_W) '$(srcdir)/driver-stratum.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-stratum.Tpo $(DEPDIR)/bfgminer-driver-stratum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-stratum.c' object='bfgminer-driver-stratum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-stratum.obj `if test -f 'driver-stratum.c'; then $(CYGPATH_W) 'driver-stratum.c'; else $(CYGPATH_W) '$(srcdir)/driver-stratum.c'; fi`

bfgminer-driver-opencl.o: driver-opencl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-opencl.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-opencl.Tpo -c -o bfgminer-driver-opencl.o `test -f 'driver-opencl.c' || echo '$(srcdir)/'`driver-opencl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-opencl.Tpo $(DEPDIR)/bfgminer-driver-opencl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-opencl.c' object='bfgminer-driver-opencl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-opencl.o `test -f 'driver-opencl.c' || echo '$(srcdir)/'`driver-opencl.c

bfgminer-driver-opencl.obj: driver-opencl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-opencl.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-opencl.Tpo -c -o bfgminer-driver-opencl.obj `if test -f 'driver-opencl.c'; then $(CYGPATH_W) 'driver-opencl.c'; else $(CYGPATH_W) '$(srcdir)/driver-opencl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-opencl.Tpo $(DEPDIR)/bfgminer-driver-opencl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-opencl.c' object='bfgminer-driver-opencl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-opencl.obj `if test -f 'driver-opencl.c'; then $(CYGPATH_W) 'driver-opencl.c'; else $(CYGPATH_W) '$(srcdir)/driver-opencl.c'; fi`

bfgminer-ocl.o: ocl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-ocl.o -MD -MP -MF $(DEPDIR)/bfgminer-ocl.Tpo -c -o bfgminer-ocl.o `test -f 'ocl.c' || echo '$(srcdir)/'`ocl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-ocl.Tpo $(DEPDIR)/bfgminer-ocl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ocl.c' object='bfgminer-ocl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-ocl.o `test -f 'ocl.c' || echo '$(srcdir)/'`ocl.c

bfgminer-ocl.obj: ocl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-ocl.obj -MD -MP -MF $(DEPDIR)/bfgminer-ocl.Tpo -c -o bfgminer-ocl.obj `if test -f 'ocl.c'; then $(CYGPATH_W) 'ocl.c'; else $(CYGPATH_W) '$(srcdir)/ocl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-ocl.Tpo $(DEPDIR)/bfgminer-ocl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='ocl.c' object='bfgminer-ocl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-ocl.obj `if test -f 'ocl.c'; then $(CYGPATH_W) 'ocl.c'; else $(CYGPATH_W) '$(srcdir)/ocl.c'; fi`

bfgminer-findnonce.o: findnonce.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-findnonce.o -MD -MP -MF $(DEPDIR)/bfgminer-findnonce.Tpo -c -o bfgminer-findnonce.o `test -f 'findnonce.c' || echo '$(srcdir)/'`findnonce.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-findnonce.Tpo $(DEPDIR)/bfgminer-findnonce.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='findnonce.c' object='bfgminer-findnonce.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-findnonce.o `test -f 'findnonce.c' || echo '$(srcdir)/'`findnonce.c

bfgminer-findnonce.obj: findnonce.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-findnonce.obj -MD -MP -MF $(DEPDIR)/bfgminer-findnonce.Tpo -c -o bfgminer-findnonce.obj `if test -f 'findnonce.c'; then $(CYGPATH_W) 'findnonce.c'; else $(CYGPATH_W) '$(srcdir)/findnonce.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-findnonce.Tpo $(DEPDIR)/bfgminer-findnonce.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='findnonce.c' object='bfgminer-findnonce.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-findnonce.obj `if test -f 'findnonce.c'; then $(CYGPATH_W) 'findnonce.c'; else $(CYGPATH_W) '$(srcdir)/findnonce.c'; fi`

bfgminer-adl.o: adl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-adl.o -MD -MP -MF $(DEPDIR)/bfgminer-adl.Tpo -c -o bfgminer-adl.o `test -f 'adl.c' || echo '$(srcdir)/'`adl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-adl.Tpo $(DEPDIR)/bfgminer-adl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='adl.c' object='bfgminer-adl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-adl.o `test -f 'adl.c' || echo '$(srcdir)/'`adl.c

bfgminer-adl.obj: adl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-adl.obj -MD -MP -MF $(DEPDIR)/bfgminer-adl.Tpo -c -o bfgminer-adl.obj `if test -f 'adl.c'; then $(CYGPATH_W) 'adl.c'; else $(CYGPATH_W) '$(srcdir)/adl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-adl.Tpo $(DEPDIR)/bfgminer-adl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='adl.c' object='bfgminer-adl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-adl.obj `if test -f 'adl.c'; then $(CYGPATH_W) 'adl.c'; else $(CYGPATH_W) '$(srcdir)/adl.c'; fi`

malgo/bfgminer-keccak.o: malgo/keccak.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT malgo/bfgminer-keccak.o -MD -MP -MF malgo/$(DEPDIR)/bfgminer-keccak.Tpo -c -o malgo/bfgminer-keccak.o `test -f 'malgo/keccak.c' || echo '$(srcdir)/'`malgo/keccak.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) malgo/$(DEPDIR)/bfgminer-keccak.Tpo malgo/$(DEPDIR)/bfgminer-keccak.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='malgo/keccak.c' object='malgo/bfgminer-keccak.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o malgo/bfgminer-keccak.o `test -f 'malgo/keccak.c' || echo '$(srcdir)/'`malgo/keccak.c

malgo/bfgminer-keccak.obj: malgo/keccak.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT malgo/bfgminer-keccak.obj -MD -MP -MF malgo/$(DEPDIR)/bfgminer-keccak.Tpo -c -o malgo/bfgminer-keccak.obj `if test -f 'malgo/keccak.c'; then $(CYGPATH_W) 'malgo/keccak.c'; else $(CYGPATH_W) '$(srcdir)/malgo/keccak.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) malgo/$(DEPDIR)/bfgminer-keccak.Tpo malgo/$(DEPDIR)/bfgminer-keccak.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='malgo/keccak.c' object='malgo/bfgminer-keccak.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o malgo/bfgminer-keccak.obj `if test -f 'malgo/keccak.c'; then $(CYGPATH_W) 'malgo/keccak.c'; else $(CYGPATH_W) '$(srcdir)/malgo/keccak.c'; fi`

malgo/bfgminer-sha256d.o: malgo/sha256d.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT malgo/bfgminer-sha256d.o -MD -MP -MF malgo/$(DEPDIR)/bfgminer-sha256d.Tpo -c -o malgo/bfgminer-sha256d.o `test -f 'malgo/sha256d.c' || echo '$(srcdir)/'`malgo/sha256d.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) malgo/$(DEPDIR)/bfgminer-sha256d.Tpo malgo/$(DEPDIR)/bfgminer-sha256d.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='malgo/sha256d.c' object='malgo/bfgminer-sha256d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o malgo/bfgminer-sha256d.o `test -f 'malgo/sha256d.c' || echo '$(srcdir)/'`malgo/sha256d.c

malgo/bfgminer-sha256d.obj: malgo/sha256d.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT malgo/bfgminer-sha256d.obj -MD -MP -MF malgo/$(DEPDIR)/bfgminer-sha256d.Tpo -c -o malgo/bfgminer-sha256d.obj `if test -f 'malgo/sha256d.c'; then $(CYGPATH_W) 'malgo/sha256d.c'; else $(CYGPATH_W) '$(srcdir)/malgo/sha256d.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) malgo/$(DEPDIR)/bfgminer-sha256d.Tpo malgo/$(DEPDIR)/bfgminer-sha256d.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='malgo/sha256d.c' object='malgo/bfgminer-sha256d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o malgo/bfgminer-sha256d.obj `if test -f 'malgo/sha256d.c'; then $(CYGPATH_W) 'malgo/sha256d.c'; else $(CYGPATH_W) '$(srcdir)/malgo/sha256d.c'; fi`

bfgminer-sha256_generic.o: sha256_generic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_generic.o -MD -MP -MF $(DEPDIR)/bfgminer-sha256_generic.Tpo -c -o bfgminer-sha256_generic.o `test -f 'sha256_generic.c' || echo '$(srcdir)/'`sha256_generic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_generic.Tpo $(DEPDIR)/bfgminer-sha256_generic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_generic.c' object='bfgminer-sha256_generic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_generic.o `test -f 'sha256_generic.c' || echo '$(srcdir)/'`sha256_generic.c

bfgminer-sha256_generic.obj: sha256_generic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_generic.obj -MD -MP -MF $(DEPDIR)/bfgminer-sha256_generic.Tpo -c -o bfgminer-sha256_generic.obj `if test -f 'sha256_generic.c'; then $(CYGPATH_W) 'sha256_generic.c'; else $(CYGPATH_W) '$(srcdir)/sha256_generic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_generic.Tpo $(DEPDIR)/bfgminer-sha256_generic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_generic.c' object='bfgminer-sha256_generic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_generic.obj `if test -f 'sha256_generic.c'; then $(CYGPATH_W) 'sha256_generic.c'; else $(CYGPATH_W) '$(srcdir)/sha256_generic.c'; fi`

bfgminer-sha256_via.o: sha256_via.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_via.o -MD -MP -MF $(DEPDIR)/bfgminer-sha256_via.Tpo -c -o bfgminer-sha256_via.o `test -f 'sha256_via.c' || echo '$(srcdir)/'`sha256_via.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_via.Tpo $(DEPDIR)/bfgminer-sha256_via.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_via.c' object='bfgminer-sha256_via.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_via.o `test -f 'sha256_via.c' || echo '$(srcdir)/'`sha256_via.c

bfgminer-sha256_via.obj: sha256_via.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_via.obj -MD -MP -MF $(DEPDIR)/bfgminer-sha256_via.Tpo -c -o bfgminer-sha256_via.obj `if test -f 'sha256_via.c'; then $(CYGPATH_W) 'sha256_via.c'; else $(CYGPATH_W) '$(srcdir)/sha256_via.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_via.Tpo $(DEPDIR)/bfgminer-sha256_via.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_via.c' object='bfgminer-sha256_via.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_via.obj `if test -f 'sha256_via.c'; then $(CYGPATH_W) 'sha256_via.c'; else $(CYGPATH_W) '$(srcdir)/sha256_via.c'; fi`

bfgminer-sha256_cryptopp.o: sha256_cryptopp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_cryptopp.o -MD -MP -MF $(DEPDIR)/bfgminer-sha256_cryptopp.Tpo -c -o bfgminer-sha256_cryptopp.o `test -f 'sha256_cryptopp.c' || echo '$(srcdir)/'`sha256_cryptopp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_cryptopp.Tpo $(DEPDIR)/bfgminer-sha256_cryptopp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_cryptopp.c' object='bfgminer-sha256_cryptopp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_cryptopp.o `test -f 'sha256_cryptopp.c' || echo '$(srcdir)/'`sha256_cryptopp.c

bfgminer-sha256_cryptopp.obj: sha256_cryptopp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_cryptopp.obj -MD -MP -MF $(DEPDIR)/bfgminer-sha256_cryptopp.Tpo -c -o bfgminer-sha256_cryptopp.obj `if test -f 'sha256_cryptopp.c'; then $(CYGPATH_W) 'sha256_cryptopp.c'; else $(CYGPATH_W) '$(srcdir)/sha256_cryptopp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_cryptopp.Tpo $(DEPDIR)/bfgminer-sha256_cryptopp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_cryptopp.c' object='bfgminer-sha256_cryptopp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_cryptopp.obj `if test -f 'sha256_cryptopp.c'; then $(CYGPATH_W) 'sha256_cryptopp.c'; else $(CYGPATH_W) '$(srcdir)/sha256_cryptopp.c'; fi`

bfgminer-sha256_sse2_amd64.o: sha256_sse2_amd64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_sse2_amd64.o -MD -MP -MF $(DEPDIR)/bfgminer-sha256_sse2_amd64.Tpo -c -o bfgminer-sha256_sse2_amd64.o `test -f 'sha256_sse2_amd64.c' || echo '$(srcdir)/'`sha256_sse2_amd64.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_sse2_amd64.Tpo $(DEPDIR)/bfgminer-sha256_sse2_amd64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_sse2_amd64.c' object='bfgminer-sha256_sse2_amd64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_sse2_amd64.o `test -f 'sha256_sse2_amd64.c' || echo '$(srcdir)/'`sha256_sse2_amd64.c

bfgminer-sha256_sse2_amd64.obj: sha256_sse2_amd64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_sse2_amd64.obj -MD -MP -MF $(DEPDIR)/bfgminer-sha256_sse2_amd64.Tpo -c -o bfgminer-sha256_sse2_amd64.obj `if test -f 'sha256_sse2_amd64.c'; then $(CYGPATH_W) 'sha256_sse2_amd64.c'; else $(CYGPATH_W) '$(srcdir)/sha256_sse2_amd64.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_sse2_amd64.Tpo $(DEPDIR)/bfgminer-sha256_sse2_amd64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_sse2_amd64.c' object='bfgminer-sha256_sse2_amd64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_sse2_amd64.obj `if test -f 'sha256_sse2_amd64.c'; then $(CYGPATH_W) 'sha256_sse2_amd64.c'; else $(CYGPATH_W) '$(srcdir)/sha256_sse2_amd64.c'; fi`

bfgminer-sha256_sse4_amd64.o: sha256_sse4_amd64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_sse4_amd64.o -MD -MP -MF $(DEPDIR)/bfgminer-sha256_sse4_amd64.Tpo -c -o bfgminer-sha256_sse4_amd64.o `test -f 'sha256_sse4_amd64.c' || echo '$(srcdir)/'`sha256_sse4_amd64.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_sse4_amd64.Tpo $(DEPDIR)/bfgminer-sha256_sse4_amd64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_sse4_amd64.c' object='bfgminer-sha256_sse4_amd64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_sse4_amd64.o `test -f 'sha256_sse4_amd64.c' || echo '$(srcdir)/'`sha256_sse4_amd64.c

bfgminer-sha256_sse4_amd64.obj: sha256_sse4_amd64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_sse4_amd64.obj -MD -MP -MF $(DEPDIR)/bfgminer-sha256_sse4_amd64.Tpo -c -o bfgminer-sha256_sse4_amd64.obj `if test -f 'sha256_sse4_amd64.c'; then $(CYGPATH_W) 'sha256_sse4_amd64.c'; else $(CYGPATH_W) '$(srcdir)/sha256_sse4_amd64.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_sse4_amd64.Tpo $(DEPDIR)/bfgminer-sha256_sse4_amd64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_sse4_amd64.c' object='bfgminer-sha256_sse4_amd64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_sse4_amd64.obj `if test -f 'sha256_sse4_amd64.c'; then $(CYGPATH_W) 'sha256_sse4_amd64.c'; else $(CYGPATH_W) '$(srcdir)/sha256_sse4_amd64.c'; fi`

bfgminer-sha256_altivec_4way.o: sha256_altivec_4way.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_altivec_4way.o -MD -MP -MF $(DEPDIR)/bfgminer-sha256_altivec_4way.Tpo -c -o bfgminer-sha256_altivec_4way.o `test -f 'sha256_altivec_4way.c' || echo '$(srcdir)/'`sha256_altivec_4way.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_altivec_4way.Tpo $(DEPDIR)/bfgminer-sha256_altivec_4way.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_altivec_4way.c' object='bfgminer-sha256_altivec_4way.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_altivec_4way.o `test -f 'sha256_altivec_4way.c' || echo '$(srcdir)/'`sha256_altivec_4way.c

bfgminer-sha256_altivec_4way.obj: sha256_altivec_4way.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-sha256_altivec_4way.obj -MD -MP -MF $(DEPDIR)/bfgminer-sha256_altivec_4way.Tpo -c -o bfgminer-sha256_altivec_4way.obj `if test -f 'sha256_altivec_4way.c'; then $(CYGPATH_W) 'sha256_altivec_4way.c'; else $(CYGPATH_W) '$(srcdir)/sha256_altivec_4way.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-sha256_altivec_4way.Tpo $(DEPDIR)/bfgminer-sha256_altivec_4way.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sha256_altivec_4way.c' object='bfgminer-sha256_altivec_4way.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-sha256_altivec_4way.obj `if test -f 'sha256_altivec_4way.c'; then $(CYGPATH_W) 'sha256_altivec_4way.c'; else $(CYGPATH_W) '$(srcdir)/sha256_altivec_4way.c'; fi`

malgo/bfgminer-scrypt.o: malgo/scrypt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT malgo/bfgminer-scrypt.o -MD -MP -MF malgo/$(DEPDIR)/bfgminer-scrypt.Tpo -c -o malgo/bfgminer-scrypt.o `test -f 'malgo/scrypt.c' || echo '$(srcdir)/'`malgo/scrypt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) malgo/$(DEPDIR)/bfgminer-scrypt.Tpo malgo/$(DEPDIR)/bfgminer-scrypt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='malgo/scrypt.c' object='malgo/bfgminer-scrypt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o malgo/bfgminer-scrypt.o `test -f 'malgo/scrypt.c' || echo '$(srcdir)/'`malgo/scrypt.c

malgo/bfgminer-scrypt.obj: malgo/scrypt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT malgo/bfgminer-scrypt.obj -MD -MP -MF malgo/$(DEPDIR)/bfgminer-scrypt.Tpo -c -o malgo/bfgminer-scrypt.obj `if test -f 'malgo/scrypt.c'; then $(CYGPATH_W) 'malgo/scrypt.c'; else $(CYGPATH_W) '$(srcdir)/malgo/scrypt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) malgo/$(DEPDIR)/bfgminer-scrypt.Tpo malgo/$(DEPDIR)/bfgminer-scrypt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='malgo/scrypt.c' object='malgo/bfgminer-scrypt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o malgo/bfgminer-scrypt.obj `if test -f 'malgo/scrypt.c'; then $(CYGPATH_W) 'malgo/scrypt.c'; else $(CYGPATH_W) '$(srcdir)/malgo/scrypt.c'; fi`

bfgminer-driver-cpu.o: driver-cpu.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-cpu.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-cpu.Tpo -c -o bfgminer-driver-cpu.o `test -f 'driver-cpu.c' || echo '$(srcdir)/'`driver-cpu.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-cpu.Tpo $(DEPDIR)/bfgminer-driver-cpu.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-cpu.c' object='bfgminer-driver-cpu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-cpu.o `test -f 'driver-cpu.c' || echo '$(srcdir)/'`driver-cpu.c

bfgminer-driver-cpu.obj: driver-cpu.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-cpu.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-cpu.Tpo -c -o bfgminer-driver-cpu.obj `if test -f 'driver-cpu.c'; then $(CYGPATH_W) 'driver-cpu.c'; else $(CYGPATH_W) '$(srcdir)/driver-cpu.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-cpu.Tpo $(DEPDIR)/bfgminer-driver-cpu.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-cpu.c' object='bfgminer-driver-cpu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-cpu.obj `if test -f 'driver-cpu.c'; then $(CYGPATH_W) 'driver-cpu.c'; else $(CYGPATH_W) '$(srcdir)/driver-cpu.c'; fi`

bfgminer-lowl-vcom.o: lowl-vcom.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-vcom.o -MD -MP -MF $(DEPDIR)/bfgminer-lowl-vcom.Tpo -c -o bfgminer-lowl-vcom.o `test -f 'lowl-vcom.c' || echo '$(srcdir)/'`lowl-vcom.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-vcom.Tpo $(DEPDIR)/bfgminer-lowl-vcom.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-vcom.c' object='bfgminer-lowl-vcom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-vcom.o `test -f 'lowl-vcom.c' || echo '$(srcdir)/'`lowl-vcom.c

bfgminer-lowl-vcom.obj: lowl-vcom.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-vcom.obj -MD -MP -MF $(DEPDIR)/bfgminer-lowl-vcom.Tpo -c -o bfgminer-lowl-vcom.obj `if test -f 'lowl-vcom.c'; then $(CYGPATH_W) 'lowl-vcom.c'; else $(CYGPATH_W) '$(srcdir)/lowl-vcom.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-vcom.Tpo $(DEPDIR)/bfgminer-lowl-vcom.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-vcom.c' object='bfgminer-lowl-vcom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-vcom.obj `if test -f 'lowl-vcom.c'; then $(CYGPATH_W) 'lowl-vcom.c'; else $(CYGPATH_W) '$(srcdir)/lowl-vcom.c'; fi`

bfgminer-lowl-usb.o: lowl-usb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-usb.o -MD -MP -MF $(DEPDIR)/bfgminer-lowl-usb.Tpo -c -o bfgminer-lowl-usb.o `test -f 'lowl-usb.c' || echo '$(srcdir)/'`lowl-usb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-usb.Tpo $(DEPDIR)/bfgminer-lowl-usb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-usb.c' object='bfgminer-lowl-usb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-usb.o `test -f 'lowl-usb.c' || echo '$(srcdir)/'`lowl-usb.c

bfgminer-lowl-usb.obj: lowl-usb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-usb.obj -MD -MP -MF $(DEPDIR)/bfgminer-lowl-usb.Tpo -c -o bfgminer-lowl-usb.obj `if test -f 'lowl-usb.c'; then $(CYGPATH_W) 'lowl-usb.c'; else $(CYGPATH_W) '$(srcdir)/lowl-usb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-usb.Tpo $(DEPDIR)/bfgminer-lowl-usb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-usb.c' object='bfgminer-lowl-usb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-usb.obj `if test -f 'lowl-usb.c'; then $(CYGPATH_W) 'lowl-usb.c'; else $(CYGPATH_W) '$(srcdir)/lowl-usb.c'; fi`

bfgminer-binloader.o: binloader.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-binloader.o -MD -MP -MF $(DEPDIR)/bfgminer-binloader.Tpo -c -o bfgminer-binloader.o `test -f 'binloader.c' || echo '$(srcdir)/'`binloader.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-binloader.Tpo $(DEPDIR)/bfgminer-binloader.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='binloader.c' object='bfgminer-binloader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-binloader.o `test -f 'binloader.c' || echo '$(srcdir)/'`binloader.c

bfgminer-binloader.obj: binloader.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-binloader.obj -MD -MP -MF $(DEPDIR)/bfgminer-binloader.Tpo -c -o bfgminer-binloader.obj `if test -f 'binloader.c'; then $(CYGPATH_W) 'binloader.c'; else $(CYGPATH_W) '$(srcdir)/binloader.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-binloader.Tpo $(DEPDIR)/bfgminer-binloader.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='binloader.c' object='bfgminer-binloader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-binloader.obj `if test -f 'binloader.c'; then $(CYGPATH_W) 'binloader.c'; else $(CYGPATH_W) '$(srcdir)/binloader.c'; fi`

bfgminer-lowlevel.o: lowlevel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowlevel.o -MD -MP -MF $(DEPDIR)/bfgminer-lowlevel.Tpo -c -o bfgminer-lowlevel.o `test -f 'lowlevel.c' || echo '$(srcdir)/'`lowlevel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowlevel.Tpo $(DEPDIR)/bfgminer-lowlevel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowlevel.c' object='bfgminer-lowlevel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowlevel.o `test -f 'lowlevel.c' || echo '$(srcdir)/'`lowlevel.c

bfgminer-lowlevel.obj: lowlevel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowlevel.obj -MD -MP -MF $(DEPDIR)/bfgminer-lowlevel.Tpo -c -o bfgminer-lowlevel.obj `if test -f 'lowlevel.c'; then $(CYGPATH_W) 'lowlevel.c'; else $(CYGPATH_W) '$(srcdir)/lowlevel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowlevel.Tpo $(DEPDIR)/bfgminer-lowlevel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowlevel.c' object='bfgminer-lowlevel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowlevel.obj `if test -f 'lowlevel.c'; then $(CYGPATH_W) 'lowlevel.c'; else $(CYGPATH_W) '$(srcdir)/lowlevel.c'; fi`

bfgminer-dynclock.o: dynclock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-dynclock.o -MD -MP -MF $(DEPDIR)/bfgminer-dynclock.Tpo -c -o bfgminer-dynclock.o `test -f 'dynclock.c' || echo '$(srcdir)/'`dynclock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-dynclock.Tpo $(DEPDIR)/bfgminer-dynclock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynclock.c' object='bfgminer-dynclock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-dynclock.o `test -f 'dynclock.c' || echo '$(srcdir)/'`dynclock.c

bfgminer-dynclock.obj: dynclock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-dynclock.obj -MD -MP -MF $(DEPDIR)/bfgminer-dynclock.Tpo -c -o bfgminer-dynclock.obj `if test -f 'dynclock.c'; then $(CYGPATH_W) 'dynclock.c'; else $(CYGPATH_W) '$(srcdir)/dynclock.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-dynclock.Tpo $(DEPDIR)/bfgminer-dynclock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynclock.c' object='bfgminer-dynclock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-dynclock.obj `if test -f 'dynclock.c'; then $(CYGPATH_W) 'dynclock.c'; else $(CYGPATH_W) '$(srcdir)/dynclock.c'; fi`

bfgminer-work2d.o: work2d.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-work2d.o -MD -MP -MF $(DEPDIR)/bfgminer-work2d.Tpo -c -o bfgminer-work2d.o `test -f 'work2d.c' || echo '$(srcdir)/'`work2d.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-work2d.Tpo $(DEPDIR)/bfgminer-work2d.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='work2d.c' object='bfgminer-work2d.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-work2d.o `test -f 'work2d.c' || echo '$(srcdir)/'`work2d.c

bfgminer-work2d.obj: work2d.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-work2d.obj -MD -MP -MF $(DEPDIR)/bfgminer-work2d.Tpo -c -o bfgminer-work2d.obj `if test -f 'work2d.c'; then $(CYGPATH_W) 'work2d.c'; else $(CYGPATH_W) '$(srcdir)/work2d.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-work2d.Tpo $(DEPDIR)/bfgminer-work2d.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='work2d.c' object='bfgminer-work2d.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-work2d.obj `if test -f 'work2d.c'; then $(CYGPATH_W) 'work2d.c'; else $(CYGPATH_W) '$(srcdir)/work2d.c'; fi`

bfgminer-driver-alchemist.o: driver-alchemist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-alchemist.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-alchemist.Tpo -c -o bfgminer-driver-alchemist.o `test -f 'driver-alchemist.c' || echo '$(srcdir)/'`driver-alchemist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-alchemist.Tpo $(DEPDIR)/bfgminer-driver-alchemist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-alchemist.c' object='bfgminer-driver-alchemist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-alchemist.o `test -f 'driver-alchemist.c' || echo '$(srcdir)/'`driver-alchemist.c

bfgminer-driver-alchemist.obj: driver-alchemist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-alchemist.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-alchemist.Tpo -c -o bfgminer-driver-alchemist.obj `if test -f 'driver-alchemist.c'; then $(CYGPATH_W) 'driver-alchemist.c'; else $(CYGPATH_W) '$(srcdir)/driver-alchemist.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-alchemist.Tpo $(DEPDIR)/bfgminer-driver-alchemist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-alchemist.c' object='bfgminer-driver-alchemist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-alchemist.obj `if test -f 'driver-alchemist.c'; then $(CYGPATH_W) 'driver-alchemist.c'; else $(CYGPATH_W) '$(srcdir)/driver-alchemist.c'; fi`

bfgminer-driver-bitforce.o: driver-bitforce.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bitforce.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-bitforce.Tpo -c -o bfgminer-driver-bitforce.o `test -f 'driver-bitforce.c' || echo '$(srcdir)/'`driver-bitforce.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bitforce.Tpo $(DEPDIR)/bfgminer-driver-bitforce.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bitforce.c' object='bfgminer-driver-bitforce.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bitforce.o `test -f 'driver-bitforce.c' || echo '$(srcdir)/'`driver-bitforce.c

bfgminer-driver-bitforce.obj: driver-bitforce.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bitforce.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-bitforce.Tpo -c -o bfgminer-driver-bitforce.obj `if test -f 'driver-bitforce.c'; then $(CYGPATH_W) 'driver-bitforce.c'; else $(CYGPATH_W) '$(srcdir)/driver-bitforce.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bitforce.Tpo $(DEPDIR)/bfgminer-driver-bitforce.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bitforce.c' object='bfgminer-driver-bitforce.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bitforce.obj `if test -f 'driver-bitforce.c'; then $(CYGPATH_W) 'driver-bitforce.c'; else $(CYGPATH_W) '$(srcdir)/driver-bitforce.c'; fi`

bfgminer-driver-bitmain.o: driver-bitmain.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bitmain.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-bitmain.Tpo -c -o bfgminer-driver-bitmain.o `test -f 'driver-bitmain.c' || echo '$(srcdir)/'`driver-bitmain.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bitmain.Tpo $(DEPDIR)/bfgminer-driver-bitmain.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bitmain.c' object='bfgminer-driver-bitmain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bitmain.o `test -f 'driver-bitmain.c' || echo '$(srcdir)/'`driver-bitmain.c

bfgminer-driver-bitmain.obj: driver-bitmain.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bitmain.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-bitmain.Tpo -c -o bfgminer-driver-bitmain.obj `if test -f 'driver-bitmain.c'; then $(CYGPATH_W) 'driver-bitmain.c'; else $(CYGPATH_W) '$(srcdir)/driver-bitmain.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bitmain.Tpo $(DEPDIR)/bfgminer-driver-bitmain.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bitmain.c' object='bfgminer-driver-bitmain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bitmain.obj `if test -f 'driver-bitmain.c'; then $(CYGPATH_W) 'driver-bitmain.c'; else $(CYGPATH_W) '$(srcdir)/driver-bitmain.c'; fi`

bfgminer-driver-bigpic.o: driver-bigpic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bigpic.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-bigpic.Tpo -c -o bfgminer-driver-bigpic.o `test -f 'driver-bigpic.c' || echo '$(srcdir)/'`driver-bigpic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bigpic.Tpo $(DEPDIR)/bfgminer-driver-bigpic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bigpic.c' object='bfgminer-driver-bigpic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bigpic.o `test -f 'driver-bigpic.c' || echo '$(srcdir)/'`driver-bigpic.c

bfgminer-driver-bigpic.obj: driver-bigpic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bigpic.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-bigpic.Tpo -c -o bfgminer-driver-bigpic.obj `if test -f 'driver-bigpic.c'; then $(CYGPATH_W) 'driver-bigpic.c'; else $(CYGPATH_W) '$(srcdir)/driver-bigpic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bigpic.Tpo $(DEPDIR)/bfgminer-driver-bigpic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bigpic.c' object='bfgminer-driver-bigpic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bigpic.obj `if test -f 'driver-bigpic.c'; then $(CYGPATH_W) 'driver-bigpic.c'; else $(CYGPATH_W) '$(srcdir)/driver-bigpic.c'; fi`

bfgminer-driver-drillbit.o: driver-drillbit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-drillbit.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-drillbit.Tpo -c -o bfgminer-driver-drillbit.o `test -f 'driver-drillbit.c' || echo '$(srcdir)/'`driver-drillbit.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-drillbit.Tpo $(DEPDIR)/bfgminer-driver-drillbit.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-drillbit.c' object='bfgminer-driver-drillbit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-drillbit.o `test -f 'driver-drillbit.c' || echo '$(srcdir)/'`driver-drillbit.c

bfgminer-driver-drillbit.obj: driver-drillbit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-drillbit.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-drillbit.Tpo -c -o bfgminer-driver-drillbit.obj `if test -f 'driver-drillbit.c'; then $(CYGPATH_W) 'driver-drillbit.c'; else $(CYGPATH_W) '$(srcdir)/driver-drillbit.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-drillbit.Tpo $(DEPDIR)/bfgminer-driver-drillbit.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-drillbit.c' object='bfgminer-driver-drillbit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-drillbit.obj `if test -f 'driver-drillbit.c'; then $(CYGPATH_W) 'driver-drillbit.c'; else $(CYGPATH_W) '$(srcdir)/driver-drillbit.c'; fi`

bfgminer-driver-twinfury.o: driver-twinfury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-twinfury.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-twinfury.Tpo -c -o bfgminer-driver-twinfury.o `test -f 'driver-twinfury.c' || echo '$(srcdir)/'`driver-twinfury.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-twinfury.Tpo $(DEPDIR)/bfgminer-driver-twinfury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-twinfury.c' object='bfgminer-driver-twinfury.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-twinfury.o `test -f 'driver-twinfury.c' || echo '$(srcdir)/'`driver-twinfury.c

bfgminer-driver-twinfury.obj: driver-twinfury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-twinfury.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-twinfury.Tpo -c -o bfgminer-driver-twinfury.obj `if test -f 'driver-twinfury.c'; then $(CYGPATH_W) 'driver-twinfury.c'; else $(CYGPATH_W) '$(srcdir)/driver-twinfury.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-twinfury.Tpo $(DEPDIR)/bfgminer-driver-twinfury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-twinfury.c' object='bfgminer-driver-twinfury.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-twinfury.obj `if test -f 'driver-twinfury.c'; then $(CYGPATH_W) 'driver-twinfury.c'; else $(CYGPATH_W) '$(srcdir)/driver-twinfury.c'; fi`

bfgminer-driver-icarus.o: driver-icarus.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-icarus.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-icarus.Tpo -c -o bfgminer-driver-icarus.o `test -f 'driver-icarus.c' || echo '$(srcdir)/'`driver-icarus.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-icarus.Tpo $(DEPDIR)/bfgminer-driver-icarus.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-icarus.c' object='bfgminer-driver-icarus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-icarus.o `test -f 'driver-icarus.c' || echo '$(srcdir)/'`driver-icarus.c

bfgminer-driver-icarus.obj: driver-icarus.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-icarus.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-icarus.Tpo -c -o bfgminer-driver-icarus.obj `if test -f 'driver-icarus.c'; then $(CYGPATH_W) 'driver-icarus.c'; else $(CYGPATH_W) '$(srcdir)/driver-icarus.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-icarus.Tpo $(DEPDIR)/bfgminer-driver-icarus.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-icarus.c' object='bfgminer-driver-icarus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-icarus.obj `if test -f 'driver-icarus.c'; then $(CYGPATH_W) 'driver-icarus.c'; else $(CYGPATH_W) '$(srcdir)/driver-icarus.c'; fi`

bfgminer-driver-cairnsmore.o: driver-cairnsmore.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-cairnsmore.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-cairnsmore.Tpo -c -o bfgminer-driver-cairnsmore.o `test -f 'driver-cairnsmore.c' || echo '$(srcdir)/'`driver-cairnsmore.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-cairnsmore.Tpo $(DEPDIR)/bfgminer-driver-cairnsmore.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-cairnsmore.c' object='bfgminer-driver-cairnsmore.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-cairnsmore.o `test -f 'driver-cairnsmore.c' || echo '$(srcdir)/'`driver-cairnsmore.c

bfgminer-driver-cairnsmore.obj: driver-cairnsmore.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-cairnsmore.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-cairnsmore.Tpo -c -o bfgminer-driver-cairnsmore.obj `if test -f 'driver-cairnsmore.c'; then $(CYGPATH_W) 'driver-cairnsmore.c'; else $(CYGPATH_W) '$(srcdir)/driver-cairnsmore.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-cairnsmore.Tpo $(DEPDIR)/bfgminer-driver-cairnsmore.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-cairnsmore.c' object='bfgminer-driver-cairnsmore.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-cairnsmore.obj `if test -f 'driver-cairnsmore.c'; then $(CYGPATH_W) 'driver-cairnsmore.c'; else $(CYGPATH_W) '$(srcdir)/driver-cairnsmore.c'; fi`

bfgminer-driver-erupter.o: driver-erupter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-erupter.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-erupter.Tpo -c -o bfgminer-driver-erupter.o `test -f 'driver-erupter.c' || echo '$(srcdir)/'`driver-erupter.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-erupter.Tpo $(DEPDIR)/bfgminer-driver-erupter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-erupter.c' object='bfgminer-driver-erupter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-erupter.o `test -f 'driver-erupter.c' || echo '$(srcdir)/'`driver-erupter.c

bfgminer-driver-erupter.obj: driver-erupter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-erupter.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-erupter.Tpo -c -o bfgminer-driver-erupter.obj `if test -f 'driver-erupter.c'; then $(CYGPATH_W) 'driver-erupter.c'; else $(CYGPATH_W) '$(srcdir)/driver-erupter.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-erupter.Tpo $(DEPDIR)/bfgminer-driver-erupter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-erupter.c' object='bfgminer-driver-erupter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-erupter.obj `if test -f 'driver-erupter.c'; then $(CYGPATH_W) 'driver-erupter.c'; else $(CYGPATH_W) '$(srcdir)/driver-erupter.c'; fi`

bfgminer-driver-antminer.o: driver-antminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-antminer.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-antminer.Tpo -c -o bfgminer-driver-antminer.o `test -f 'driver-antminer.c' || echo '$(srcdir)/'`driver-antminer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-antminer.Tpo $(DEPDIR)/bfgminer-driver-antminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-antminer.c' object='bfgminer-driver-antminer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-antminer.o `test -f 'driver-antminer.c' || echo '$(srcdir)/'`driver-antminer.c

bfgminer-driver-antminer.obj: driver-antminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-antminer.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-antminer.Tpo -c -o bfgminer-driver-antminer.obj `if test -f 'driver-antminer.c'; then $(CYGPATH_W) 'driver-antminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-antminer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-antminer.Tpo $(DEPDIR)/bfgminer-driver-antminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-antminer.c' object='bfgminer-driver-antminer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-antminer.obj `if test -f 'driver-antminer.c'; then $(CYGPATH_W) 'driver-antminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-antminer.c'; fi`

bfgminer-gc3355.o: gc3355.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-gc3355.o -MD -MP -MF $(DEPDIR)/bfgminer-gc3355.Tpo -c -o bfgminer-gc3355.o `test -f 'gc3355.c' || echo '$(srcdir)/'`gc3355.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-gc3355.Tpo $(DEPDIR)/bfgminer-gc3355.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gc3355.c' object='bfgminer-gc3355.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-gc3355.o `test -f 'gc3355.c' || echo '$(srcdir)/'`gc3355.c

bfgminer-gc3355.obj: gc3355.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-gc3355.obj -MD -MP -MF $(DEPDIR)/bfgminer-gc3355.Tpo -c -o bfgminer-gc3355.obj `if test -f 'gc3355.c'; then $(CYGPATH_W) 'gc3355.c'; else $(CYGPATH_W) '$(srcdir)/gc3355.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-gc3355.Tpo $(DEPDIR)/bfgminer-gc3355.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='gc3355.c' object='bfgminer-gc3355.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-gc3355.obj `if test -f 'gc3355.c'; then $(CYGPATH_W) 'gc3355.c'; else $(CYGPATH_W) '$(srcdir)/gc3355.c'; fi`

bfgminer-driver-gridseed.o: driver-gridseed.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-gridseed.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-gridseed.Tpo -c -o bfgminer-driver-gridseed.o `test -f 'driver-gridseed.c' || echo '$(srcdir)/'`driver-gridseed.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-gridseed.Tpo $(DEPDIR)/bfgminer-driver-gridseed.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-gridseed.c' object='bfgminer-driver-gridseed.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-gridseed.o `test -f 'driver-gridseed.c' || echo '$(srcdir)/'`driver-gridseed.c

bfgminer-driver-gridseed.obj: driver-gridseed.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-gridseed.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-gridseed.Tpo -c -o bfgminer-driver-gridseed.obj `if test -f 'driver-gridseed.c'; then $(CYGPATH_W) 'driver-gridseed.c'; else $(CYGPATH_W) '$(srcdir)/driver-gridseed.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-gridseed.Tpo $(DEPDIR)/bfgminer-driver-gridseed.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-gridseed.c' object='bfgminer-driver-gridseed.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-gridseed.obj `if test -f 'driver-gridseed.c'; then $(CYGPATH_W) 'driver-gridseed.c'; else $(CYGPATH_W) '$(srcdir)/driver-gridseed.c'; fi`

bfgminer-driver-dualminer.o: driver-dualminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-dualminer.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-dualminer.Tpo -c -o bfgminer-driver-dualminer.o `test -f 'driver-dualminer.c' || echo '$(srcdir)/'`driver-dualminer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-dualminer.Tpo $(DEPDIR)/bfgminer-driver-dualminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-dualminer.c' object='bfgminer-driver-dualminer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-dualminer.o `test -f 'driver-dualminer.c' || echo '$(srcdir)/'`driver-dualminer.c

bfgminer-driver-dualminer.obj: driver-dualminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-dualminer.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-dualminer.Tpo -c -o bfgminer-driver-dualminer.obj `if test -f 'driver-dualminer.c'; then $(CYGPATH_W) 'driver-dualminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-dualminer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-dualminer.Tpo $(DEPDIR)/bfgminer-driver-dualminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-dualminer.c' object='bfgminer-driver-dualminer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-dualminer.obj `if test -f 'driver-dualminer.c'; then $(CYGPATH_W) 'driver-dualminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-dualminer.c'; fi`

bfgminer-driver-zeusminer.o: driver-zeusminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-zeusminer.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-zeusminer.Tpo -c -o bfgminer-driver-zeusminer.o `test -f 'driver-zeusminer.c' || echo '$(srcdir)/'`driver-zeusminer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-zeusminer.Tpo $(DEPDIR)/bfgminer-driver-zeusminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-zeusminer.c' object='bfgminer-driver-zeusminer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-zeusminer.o `test -f 'driver-zeusminer.c' || echo '$(srcdir)/'`driver-zeusminer.c

bfgminer-driver-zeusminer.obj: driver-zeusminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-zeusminer.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-zeusminer.Tpo -c -o bfgminer-driver-zeusminer.obj `if test -f 'driver-zeusminer.c'; then $(CYGPATH_W) 'driver-zeusminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-zeusminer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-zeusminer.Tpo $(DEPDIR)/bfgminer-driver-zeusminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-zeusminer.c' object='bfgminer-driver-zeusminer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-zeusminer.obj `if test -f 'driver-zeusminer.c'; then $(CYGPATH_W) 'driver-zeusminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-zeusminer.c'; fi`

bfgminer-driver-avalon.o: driver-avalon.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-avalon.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-avalon.Tpo -c -o bfgminer-driver-avalon.o `test -f 'driver-avalon.c' || echo '$(srcdir)/'`driver-avalon.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-avalon.Tpo $(DEPDIR)/bfgminer-driver-avalon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-avalon.c' object='bfgminer-driver-avalon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-avalon.o `test -f 'driver-avalon.c' || echo '$(srcdir)/'`driver-avalon.c

bfgminer-driver-avalon.obj: driver-avalon.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-avalon.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-avalon.Tpo -c -o bfgminer-driver-avalon.obj `if test -f 'driver-avalon.c'; then $(CYGPATH_W) 'driver-avalon.c'; else $(CYGPATH_W) '$(srcdir)/driver-avalon.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-avalon.Tpo $(DEPDIR)/bfgminer-driver-avalon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-avalon.c' object='bfgminer-driver-avalon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-avalon.obj `if test -f 'driver-avalon.c'; then $(CYGPATH_W) 'driver-avalon.c'; else $(CYGPATH_W) '$(srcdir)/driver-avalon.c'; fi`

bfgminer-driver-avalonmm.o: driver-avalonmm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-avalonmm.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-avalonmm.Tpo -c -o bfgminer-driver-avalonmm.o `test -f 'driver-avalonmm.c' || echo '$(srcdir)/'`driver-avalonmm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-avalonmm.Tpo $(DEPDIR)/bfgminer-driver-avalonmm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-avalonmm.c' object='bfgminer-driver-avalonmm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-avalonmm.o `test -f 'driver-avalonmm.c' || echo '$(srcdir)/'`driver-avalonmm.c

bfgminer-driver-avalonmm.obj: driver-avalonmm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-avalonmm.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-avalonmm.Tpo -c -o bfgminer-driver-avalonmm.obj `if test -f 'driver-avalonmm.c'; then $(CYGPATH_W) 'driver-avalonmm.c'; else $(CYGPATH_W) '$(srcdir)/driver-avalonmm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-avalonmm.Tpo $(DEPDIR)/bfgminer-driver-avalonmm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-avalonmm.c' object='bfgminer-driver-avalonmm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-avalonmm.obj `if test -f 'driver-avalonmm.c'; then $(CYGPATH_W) 'driver-avalonmm.c'; else $(CYGPATH_W) '$(srcdir)/driver-avalonmm.c'; fi`

bfgminer-driver-knc.o: driver-knc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-knc.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-knc.Tpo -c -o bfgminer-driver-knc.o `test -f 'driver-knc.c' || echo '$(srcdir)/'`driver-knc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-knc.Tpo $(DEPDIR)/bfgminer-driver-knc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-knc.c' object='bfgminer-driver-knc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-knc.o `test -f 'driver-knc.c' || echo '$(srcdir)/'`driver-knc.c

bfgminer-driver-knc.obj: driver-knc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-knc.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-knc.Tpo -c -o bfgminer-driver-knc.obj `if test -f 'driver-knc.c'; then $(CYGPATH_W) 'driver-knc.c'; else $(CYGPATH_W) '$(srcdir)/driver-knc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-knc.Tpo $(DEPDIR)/bfgminer-driver-knc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-knc.c' object='bfgminer-driver-knc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-knc.obj `if test -f 'driver-knc.c'; then $(CYGPATH_W) 'driver-knc.c'; else $(CYGPATH_W) '$(srcdir)/driver-knc.c'; fi`

bfgminer-driver-kncasic.o: driver-kncasic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-kncasic.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-kncasic.Tpo -c -o bfgminer-driver-kncasic.o `test -f 'driver-kncasic.c' || echo '$(srcdir)/'`driver-kncasic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-kncasic.Tpo $(DEPDIR)/bfgminer-driver-kncasic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-kncasic.c' object='bfgminer-driver-kncasic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-kncasic.o `test -f 'driver-kncasic.c' || echo '$(srcdir)/'`driver-kncasic.c

bfgminer-driver-kncasic.obj: driver-kncasic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-kncasic.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-kncasic.Tpo -c -o bfgminer-driver-kncasic.obj `if test -f 'driver-kncasic.c'; then $(CYGPATH_W) 'driver-kncasic.c'; else $(CYGPATH_W) '$(srcdir)/driver-kncasic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-kncasic.Tpo $(DEPDIR)/bfgminer-driver-kncasic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-kncasic.c' object='bfgminer-driver-kncasic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-kncasic.obj `if test -f 'driver-kncasic.c'; then $(CYGPATH_W) 'driver-kncasic.c'; else $(CYGPATH_W) '$(srcdir)/driver-kncasic.c'; fi`

bfgminer-driver-klondike.o: driver-klondike.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-klondike.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-klondike.Tpo -c -o bfgminer-driver-klondike.o `test -f 'driver-klondike.c' || echo '$(srcdir)/'`driver-klondike.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-klondike.Tpo $(DEPDIR)/bfgminer-driver-klondike.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-klondike.c' object='bfgminer-driver-klondike.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-klondike.o `test -f 'driver-klondike.c' || echo '$(srcdir)/'`driver-klondike.c

bfgminer-driver-klondike.obj: driver-klondike.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-klondike.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-klondike.Tpo -c -o bfgminer-driver-klondike.obj `if test -f 'driver-klondike.c'; then $(CYGPATH_W) 'driver-klondike.c'; else $(CYGPATH_W) '$(srcdir)/driver-klondike.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-klondike.Tpo $(DEPDIR)/bfgminer-driver-klondike.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-klondike.c' object='bfgminer-driver-klondike.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-klondike.obj `if test -f 'driver-klondike.c'; then $(CYGPATH_W) 'driver-klondike.c'; else $(CYGPATH_W) '$(srcdir)/driver-klondike.c'; fi`

bfgminer-driver-hashbusteravalon.o: driver-hashbusteravalon.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-hashbusteravalon.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-hashbusteravalon.Tpo -c -o bfgminer-driver-hashbusteravalon.o `test -f 'driver-hashbusteravalon.c' || echo '$(srcdir)/'`driver-hashbusteravalon.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-hashbusteravalon.Tpo $(DEPDIR)/bfgminer-driver-hashbusteravalon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-hashbusteravalon.c' object='bfgminer-driver-hashbusteravalon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-hashbusteravalon.o `test -f 'driver-hashbusteravalon.c' || echo '$(srcdir)/'`driver-hashbusteravalon.c

bfgminer-driver-hashbusteravalon.obj: driver-hashbusteravalon.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-hashbusteravalon.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-hashbusteravalon.Tpo -c -o bfgminer-driver-hashbusteravalon.obj `if test -f 'driver-hashbusteravalon.c'; then $(CYGPATH_W) 'driver-hashbusteravalon.c'; else $(CYGPATH_W) '$(srcdir)/driver-hashbusteravalon.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-hashbusteravalon.Tpo $(DEPDIR)/bfgminer-driver-hashbusteravalon.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-hashbusteravalon.c' object='bfgminer-driver-hashbusteravalon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-hashbusteravalon.obj `if test -f 'driver-hashbusteravalon.c'; then $(CYGPATH_W) 'driver-hashbusteravalon.c'; else $(CYGPATH_W) '$(srcdir)/driver-hashbusteravalon.c'; fi`

bfgminer-driver-modminer.o: driver-modminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-modminer.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-modminer.Tpo -c -o bfgminer-driver-modminer.o `test -f 'driver-modminer.c' || echo '$(srcdir)/'`driver-modminer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-modminer.Tpo $(DEPDIR)/bfgminer-driver-modminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-modminer.c' object='bfgminer-driver-modminer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-modminer.o `test -f 'driver-modminer.c' || echo '$(srcdir)/'`driver-modminer.c

bfgminer-driver-modminer.obj: driver-modminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-modminer.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-modminer.Tpo -c -o bfgminer-driver-modminer.obj `if test -f 'driver-modminer.c'; then $(CYGPATH_W) 'driver-modminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-modminer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-modminer.Tpo $(DEPDIR)/bfgminer-driver-modminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-modminer.c' object='bfgminer-driver-modminer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-modminer.obj `if test -f 'driver-modminer.c'; then $(CYGPATH_W) 'driver-modminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-modminer.c'; fi`

bfgminer-driver-titan.o: driver-titan.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-titan.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-titan.Tpo -c -o bfgminer-driver-titan.o `test -f 'driver-titan.c' || echo '$(srcdir)/'`driver-titan.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-titan.Tpo $(DEPDIR)/bfgminer-driver-titan.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-titan.c' object='bfgminer-driver-titan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-titan.o `test -f 'driver-titan.c' || echo '$(srcdir)/'`driver-titan.c

bfgminer-driver-titan.obj: driver-titan.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-titan.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-titan.Tpo -c -o bfgminer-driver-titan.obj `if test -f 'driver-titan.c'; then $(CYGPATH_W) 'driver-titan.c'; else $(CYGPATH_W) '$(srcdir)/driver-titan.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-titan.Tpo $(DEPDIR)/bfgminer-driver-titan.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-titan.c' object='bfgminer-driver-titan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-titan.obj `if test -f 'driver-titan.c'; then $(CYGPATH_W) 'driver-titan.c'; else $(CYGPATH_W) '$(srcdir)/driver-titan.c'; fi`

bfgminer-titan-asic.o: titan-asic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-titan-asic.o -MD -MP -MF $(DEPDIR)/bfgminer-titan-asic.Tpo -c -o bfgminer-titan-asic.o `test -f 'titan-asic.c' || echo '$(srcdir)/'`titan-asic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-titan-asic.Tpo $(DEPDIR)/bfgminer-titan-asic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='titan-asic.c' object='bfgminer-titan-asic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-titan-asic.o `test -f 'titan-asic.c' || echo '$(srcdir)/'`titan-asic.c

bfgminer-titan-asic.obj: titan-asic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-titan-asic.obj -MD -MP -MF $(DEPDIR)/bfgminer-titan-asic.Tpo -c -o bfgminer-titan-asic.obj `if test -f 'titan-asic.c'; then $(CYGPATH_W) 'titan-asic.c'; else $(CYGPATH_W) '$(srcdir)/titan-asic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-titan-asic.Tpo $(DEPDIR)/bfgminer-titan-asic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='titan-asic.c' object='bfgminer-titan-asic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-titan-asic.obj `if test -f 'titan-asic.c'; then $(CYGPATH_W) 'titan-asic.c'; else $(CYGPATH_W) '$(srcdir)/titan-asic.c'; fi`

knc-asic/bfgminer-knc-asic.o: knc-asic/knc-asic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT knc-asic/bfgminer-knc-asic.o -MD -MP -MF knc-asic/$(DEPDIR)/bfgminer-knc-asic.Tpo -c -o knc-asic/bfgminer-knc-asic.o `test -f 'knc-asic/knc-asic.c' || echo '$(srcdir)/'`knc-asic/knc-asic.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) knc-asic/$(DEPDIR)/bfgminer-knc-asic.Tpo knc-asic/$(DEPDIR)/bfgminer-knc-asic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='knc-asic/knc-asic.c' object='knc-asic/bfgminer-knc-asic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o knc-asic/bfgminer-knc-asic.o `test -f 'knc-asic/knc-asic.c' || echo '$(srcdir)/'`knc-asic/knc-asic.c

knc-asic/bfgminer-knc-asic.obj: knc-asic/knc-asic.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT knc-asic/bfgminer-knc-asic.obj -MD -MP -MF knc-asic/$(DEPDIR)/bfgminer-knc-asic.Tpo -c -o knc-asic/bfgminer-knc-asic.obj `if test -f 'knc-asic/knc-asic.c'; then $(CYGPATH_W) 'knc-asic/knc-asic.c'; else $(CYGPATH_W) '$(srcdir)/knc-asic/knc-asic.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) knc-asic/$(DEPDIR)/bfgminer-knc-asic.Tpo knc-asic/$(DEPDIR)/bfgminer-knc-asic.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='knc-asic/knc-asic.c' object='knc-asic/bfgminer-knc-asic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o knc-asic/bfgminer-knc-asic.obj `if test -f 'knc-asic/knc-asic.c'; then $(CYGPATH_W) 'knc-asic/knc-asic.c'; else $(CYGPATH_W) '$(srcdir)/knc-asic/knc-asic.c'; fi`

knc-asic/bfgminer-knc-spimux.o: knc-asic/knc-spimux.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT knc-asic/bfgminer-knc-spimux.o -MD -MP -MF knc-asic/$(DEPDIR)/bfgminer-knc-spimux.Tpo -c -o knc-asic/bfgminer-knc-spimux.o `test -f 'knc-asic/knc-spimux.c' || echo '$(srcdir)/'`knc-asic/knc-spimux.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) knc-asic/$(DEPDIR)/bfgminer-knc-spimux.Tpo knc-asic/$(DEPDIR)/bfgminer-knc-spimux.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='knc-asic/knc-spimux.c' object='knc-asic/bfgminer-knc-spimux.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o knc-asic/bfgminer-knc-spimux.o `test -f 'knc-asic/knc-spimux.c' || echo '$(srcdir)/'`knc-asic/knc-spimux.c

knc-asic/bfgminer-knc-spimux.obj: knc-asic/knc-spimux.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT knc-asic/bfgminer-knc-spimux.obj -MD -MP -MF knc-asic/$(DEPDIR)/bfgminer-knc-spimux.Tpo -c -o knc-asic/bfgminer-knc-spimux.obj `if test -f 'knc-asic/knc-spimux.c'; then $(CYGPATH_W) 'knc-asic/knc-spimux.c'; else $(CYGPATH_W) '$(srcdir)/knc-asic/knc-spimux.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) knc-asic/$(DEPDIR)/bfgminer-knc-spimux.Tpo knc-asic/$(DEPDIR)/bfgminer-knc-spimux.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='knc-asic/knc-spimux.c' object='knc-asic/bfgminer-knc-spimux.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o knc-asic/bfgminer-knc-spimux.obj `if test -f 'knc-asic/knc-spimux.c'; then $(CYGPATH_W) 'knc-asic/knc-spimux.c'; else $(CYGPATH_W) '$(srcdir)/knc-asic/knc-spimux.c'; fi`

knc-asic/bfgminer-knc-transport-spimux.o: knc-asic/knc-transport-spimux.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT knc-asic/bfgminer-knc-transport-spimux.o -MD -MP -MF knc-asic/$(DEPDIR)/bfgminer-knc-transport-spimux.Tpo -c -o knc-asic/bfgminer-knc-transport-spimux.o `test -f 'knc-asic/knc-transport-spimux.c' || echo '$(srcdir)/'`knc-asic/knc-transport-spimux.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) knc-asic/$(DEPDIR)/bfgminer-knc-transport-spimux.Tpo knc-asic/$(DEPDIR)/bfgminer-knc-transport-spimux.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='knc-asic/knc-transport-spimux.c' object='knc-asic/bfgminer-knc-transport-spimux.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o knc-asic/bfgminer-knc-transport-spimux.o `test -f 'knc-asic/knc-transport-spimux.c' || echo '$(srcdir)/'`knc-asic/knc-transport-spimux.c

knc-asic/bfgminer-knc-transport-spimux.obj: knc-asic/knc-transport-spimux.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT knc-asic/bfgminer-knc-transport-spimux.obj -MD -MP -MF knc-asic/$(DEPDIR)/bfgminer-knc-transport-spimux.Tpo -c -o knc-asic/bfgminer-knc-transport-spimux.obj `if test -f 'knc-asic/knc-transport-spimux.c'; then $(CYGPATH_W) 'knc-asic/knc-transport-spimux.c'; else $(CYGPATH_W) '$(srcdir)/knc-asic/knc-transport-spimux.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) knc-asic/$(DEPDIR)/bfgminer-knc-transport-spimux.Tpo knc-asic/$(DEPDIR)/bfgminer-knc-transport-spimux.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='knc-asic/knc-transport-spimux.c' object='knc-asic/bfgminer-knc-transport-spimux.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o knc-asic/bfgminer-knc-transport-spimux.obj `if test -f 'knc-asic/knc-transport-spimux.c'; then $(CYGPATH_W) 'knc-asic/knc-transport-spimux.c'; else $(CYGPATH_W) '$(srcdir)/knc-asic/knc-transport-spimux.c'; fi`

bfgminer-driver-x6500.o: driver-x6500.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-x6500.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-x6500.Tpo -c -o bfgminer-driver-x6500.o `test -f 'driver-x6500.c' || echo '$(srcdir)/'`driver-x6500.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-x6500.Tpo $(DEPDIR)/bfgminer-driver-x6500.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-x6500.c' object='bfgminer-driver-x6500.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-x6500.o `test -f 'driver-x6500.c' || echo '$(srcdir)/'`driver-x6500.c

bfgminer-driver-x6500.obj: driver-x6500.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-x6500.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-x6500.Tpo -c -o bfgminer-driver-x6500.obj `if test -f 'driver-x6500.c'; then $(CYGPATH_W) 'driver-x6500.c'; else $(CYGPATH_W) '$(srcdir)/driver-x6500.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-x6500.Tpo $(DEPDIR)/bfgminer-driver-x6500.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-x6500.c' object='bfgminer-driver-x6500.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-x6500.obj `if test -f 'driver-x6500.c'; then $(CYGPATH_W) 'driver-x6500.c'; else $(CYGPATH_W) '$(srcdir)/driver-x6500.c'; fi`

bfgminer-jtag.o: jtag.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-jtag.o -MD -MP -MF $(DEPDIR)/bfgminer-jtag.Tpo -c -o bfgminer-jtag.o `test -f 'jtag.c' || echo '$(srcdir)/'`jtag.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-jtag.Tpo $(DEPDIR)/bfgminer-jtag.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='jtag.c' object='bfgminer-jtag.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-jtag.o `test -f 'jtag.c' || echo '$(srcdir)/'`jtag.c

bfgminer-jtag.obj: jtag.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-jtag.obj -MD -MP -MF $(DEPDIR)/bfgminer-jtag.Tpo -c -o bfgminer-jtag.obj `if test -f 'jtag.c'; then $(CYGPATH_W) 'jtag.c'; else $(CYGPATH_W) '$(srcdir)/jtag.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-jtag.Tpo $(DEPDIR)/bfgminer-jtag.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='jtag.c' object='bfgminer-jtag.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-jtag.obj `if test -f 'jtag.c'; then $(CYGPATH_W) 'jtag.c'; else $(CYGPATH_W) '$(srcdir)/jtag.c'; fi`

bfgminer-driver-ztex.o: driver-ztex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-ztex.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-ztex.Tpo -c -o bfgminer-driver-ztex.o `test -f 'driver-ztex.c' || echo '$(srcdir)/'`driver-ztex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-ztex.Tpo $(DEPDIR)/bfgminer-driver-ztex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-ztex.c' object='bfgminer-driver-ztex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-ztex.o `test -f 'driver-ztex.c' || echo '$(srcdir)/'`driver-ztex.c

bfgminer-driver-ztex.obj: driver-ztex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-ztex.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-ztex.Tpo -c -o bfgminer-driver-ztex.obj `if test -f 'driver-ztex.c'; then $(CYGPATH_W) 'driver-ztex.c'; else $(CYGPATH_W) '$(srcdir)/driver-ztex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-ztex.Tpo $(DEPDIR)/bfgminer-driver-ztex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-ztex.c' object='bfgminer-driver-ztex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-ztex.obj `if test -f 'driver-ztex.c'; then $(CYGPATH_W) 'driver-ztex.c'; else $(CYGPATH_W) '$(srcdir)/driver-ztex.c'; fi`

bfgminer-libztex.o: libztex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-libztex.o -MD -MP -MF $(DEPDIR)/bfgminer-libztex.Tpo -c -o bfgminer-libztex.o `test -f 'libztex.c' || echo '$(srcdir)/'`libztex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-libztex.Tpo $(DEPDIR)/bfgminer-libztex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libztex.c' object='bfgminer-libztex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-libztex.o `test -f 'libztex.c' || echo '$(srcdir)/'`libztex.c

bfgminer-libztex.obj: libztex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-libztex.obj -MD -MP -MF $(DEPDIR)/bfgminer-libztex.Tpo -c -o bfgminer-libztex.obj `if test -f 'libztex.c'; then $(CYGPATH_W) 'libztex.c'; else $(CYGPATH_W) '$(srcdir)/libztex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-libztex.Tpo $(DEPDIR)/bfgminer-libztex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libztex.c' object='bfgminer-libztex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-libztex.obj `if test -f 'libztex.c'; then $(CYGPATH_W) 'libztex.c'; else $(CYGPATH_W) '$(srcdir)/libztex.c'; fi`

bfgminer-driver-bifury.o: driver-bifury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bifury.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-bifury.Tpo -c -o bfgminer-driver-bifury.o `test -f 'driver-bifury.c' || echo '$(srcdir)/'`driver-bifury.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bifury.Tpo $(DEPDIR)/bfgminer-driver-bifury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bifury.c' object='bfgminer-driver-bifury.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bifury.o `test -f 'driver-bifury.c' || echo '$(srcdir)/'`driver-bifury.c

bfgminer-driver-bifury.obj: driver-bifury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bifury.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-bifury.Tpo -c -o bfgminer-driver-bifury.obj `if test -f 'driver-bifury.c'; then $(CYGPATH_W) 'driver-bifury.c'; else $(CYGPATH_W) '$(srcdir)/driver-bifury.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bifury.Tpo $(DEPDIR)/bfgminer-driver-bifury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bifury.c' object='bfgminer-driver-bifury.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bifury.obj `if test -f 'driver-bifury.c'; then $(CYGPATH_W) 'driver-bifury.c'; else $(CYGPATH_W) '$(srcdir)/driver-bifury.c'; fi`

bfgminer-driver-bitfury.o: driver-bitfury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bitfury.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-bitfury.Tpo -c -o bfgminer-driver-bitfury.o `test -f 'driver-bitfury.c' || echo '$(srcdir)/'`driver-bitfury.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bitfury.Tpo $(DEPDIR)/bfgminer-driver-bitfury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bitfury.c' object='bfgminer-driver-bitfury.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bitfury.o `test -f 'driver-bitfury.c' || echo '$(srcdir)/'`driver-bitfury.c

bfgminer-driver-bitfury.obj: driver-bitfury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bitfury.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-bitfury.Tpo -c -o bfgminer-driver-bitfury.obj `if test -f 'driver-bitfury.c'; then $(CYGPATH_W) 'driver-bitfury.c'; else $(CYGPATH_W) '$(srcdir)/driver-bitfury.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bitfury.Tpo $(DEPDIR)/bfgminer-driver-bitfury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bitfury.c' object='bfgminer-driver-bitfury.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bitfury.obj `if test -f 'driver-bitfury.c'; then $(CYGPATH_W) 'driver-bitfury.c'; else $(CYGPATH_W) '$(srcdir)/driver-bitfury.c'; fi`

bfgminer-libbitfury.o: libbitfury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-libbitfury.o -MD -MP -MF $(DEPDIR)/bfgminer-libbitfury.Tpo -c -o bfgminer-libbitfury.o `test -f 'libbitfury.c' || echo '$(srcdir)/'`libbitfury.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-libbitfury.Tpo $(DEPDIR)/bfgminer-libbitfury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libbitfury.c' object='bfgminer-libbitfury.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-libbitfury.o `test -f 'libbitfury.c' || echo '$(srcdir)/'`libbitfury.c

bfgminer-libbitfury.obj: libbitfury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-libbitfury.obj -MD -MP -MF $(DEPDIR)/bfgminer-libbitfury.Tpo -c -o bfgminer-libbitfury.obj `if test -f 'libbitfury.c'; then $(CYGPATH_W) 'libbitfury.c'; else $(CYGPATH_W) '$(srcdir)/libbitfury.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-libbitfury.Tpo $(DEPDIR)/bfgminer-libbitfury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='libbitfury.c' object='bfgminer-libbitfury.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-libbitfury.obj `if test -f 'libbitfury.c'; then $(CYGPATH_W) 'libbitfury.c'; else $(CYGPATH_W) '$(srcdir)/libbitfury.c'; fi`

bfgminer-driver-bfsb.o: driver-bfsb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bfsb.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-bfsb.Tpo -c -o bfgminer-driver-bfsb.o `test -f 'driver-bfsb.c' || echo '$(srcdir)/'`driver-bfsb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bfsb.Tpo $(DEPDIR)/bfgminer-driver-bfsb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bfsb.c' object='bfgminer-driver-bfsb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bfsb.o `test -f 'driver-bfsb.c' || echo '$(srcdir)/'`driver-bfsb.c

bfgminer-driver-bfsb.obj: driver-bfsb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bfsb.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-bfsb.Tpo -c -o bfgminer-driver-bfsb.obj `if test -f 'driver-bfsb.c'; then $(CYGPATH_W) 'driver-bfsb.c'; else $(CYGPATH_W) '$(srcdir)/driver-bfsb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bfsb.Tpo $(DEPDIR)/bfgminer-driver-bfsb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bfsb.c' object='bfgminer-driver-bfsb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bfsb.obj `if test -f 'driver-bfsb.c'; then $(CYGPATH_W) 'driver-bfsb.c'; else $(CYGPATH_W) '$(srcdir)/driver-bfsb.c'; fi`

bfgminer-driver-bfx.o: driver-bfx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bfx.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-bfx.Tpo -c -o bfgminer-driver-bfx.o `test -f 'driver-bfx.c' || echo '$(srcdir)/'`driver-bfx.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bfx.Tpo $(DEPDIR)/bfgminer-driver-bfx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bfx.c' object='bfgminer-driver-bfx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bfx.o `test -f 'driver-bfx.c' || echo '$(srcdir)/'`driver-bfx.c

bfgminer-driver-bfx.obj: driver-bfx.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-bfx.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-bfx.Tpo -c -o bfgminer-driver-bfx.obj `if test -f 'driver-bfx.c'; then $(CYGPATH_W) 'driver-bfx.c'; else $(CYGPATH_W) '$(srcdir)/driver-bfx.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-bfx.Tpo $(DEPDIR)/bfgminer-driver-bfx.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-bfx.c' object='bfgminer-driver-bfx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-bfx.obj `if test -f 'driver-bfx.c'; then $(CYGPATH_W) 'driver-bfx.c'; else $(CYGPATH_W) '$(srcdir)/driver-bfx.c'; fi`

bfgminer-driver-metabank.o: driver-metabank.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-metabank.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-metabank.Tpo -c -o bfgminer-driver-metabank.o `test -f 'driver-metabank.c' || echo '$(srcdir)/'`driver-metabank.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-metabank.Tpo $(DEPDIR)/bfgminer-driver-metabank.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-metabank.c' object='bfgminer-driver-metabank.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-metabank.o `test -f 'driver-metabank.c' || echo '$(srcdir)/'`driver-metabank.c

bfgminer-driver-metabank.obj: driver-metabank.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-metabank.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-metabank.Tpo -c -o bfgminer-driver-metabank.obj `if test -f 'driver-metabank.c'; then $(CYGPATH_W) 'driver-metabank.c'; else $(CYGPATH_W) '$(srcdir)/driver-metabank.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-metabank.Tpo $(DEPDIR)/bfgminer-driver-metabank.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-metabank.c' object='bfgminer-driver-metabank.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-metabank.obj `if test -f 'driver-metabank.c'; then $(CYGPATH_W) 'driver-metabank.c'; else $(CYGPATH_W) '$(srcdir)/driver-metabank.c'; fi`

bfgminer-tm_i2c.o: tm_i2c.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-tm_i2c.o -MD -MP -MF $(DEPDIR)/bfgminer-tm_i2c.Tpo -c -o bfgminer-tm_i2c.o `test -f 'tm_i2c.c' || echo '$(srcdir)/'`tm_i2c.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-tm_i2c.Tpo $(DEPDIR)/bfgminer-tm_i2c.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tm_i2c.c' object='bfgminer-tm_i2c.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-tm_i2c.o `test -f 'tm_i2c.c' || echo '$(srcdir)/'`tm_i2c.c

bfgminer-tm_i2c.obj: tm_i2c.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-tm_i2c.obj -MD -MP -MF $(DEPDIR)/bfgminer-tm_i2c.Tpo -c -o bfgminer-tm_i2c.obj `if test -f 'tm_i2c.c'; then $(CYGPATH_W) 'tm_i2c.c'; else $(CYGPATH_W) '$(srcdir)/tm_i2c.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-tm_i2c.Tpo $(DEPDIR)/bfgminer-tm_i2c.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tm_i2c.c' object='bfgminer-tm_i2c.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-tm_i2c.obj `if test -f 'tm_i2c.c'; then $(CYGPATH_W) 'tm_i2c.c'; else $(CYGPATH_W) '$(srcdir)/tm_i2c.c'; fi`

bfgminer-driver-littlefury.o: driver-littlefury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-littlefury.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-littlefury.Tpo -c -o bfgminer-driver-littlefury.o `test -f 'driver-littlefury.c' || echo '$(srcdir)/'`driver-littlefury.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-littlefury.Tpo $(DEPDIR)/bfgminer-driver-littlefury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-littlefury.c' object='bfgminer-driver-littlefury.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-littlefury.o `test -f 'driver-littlefury.c' || echo '$(srcdir)/'`driver-littlefury.c

bfgminer-driver-littlefury.obj: driver-littlefury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-littlefury.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-littlefury.Tpo -c -o bfgminer-driver-littlefury.obj `if test -f 'driver-littlefury.c'; then $(CYGPATH_W) 'driver-littlefury.c'; else $(CYGPATH_W) '$(srcdir)/driver-littlefury.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-littlefury.Tpo $(DEPDIR)/bfgminer-driver-littlefury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-littlefury.c' object='bfgminer-driver-littlefury.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-littlefury.obj `if test -f 'driver-littlefury.c'; then $(CYGPATH_W) 'driver-littlefury.c'; else $(CYGPATH_W) '$(srcdir)/driver-littlefury.c'; fi`

bfgminer-driver-nanofury.o: driver-nanofury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-nanofury.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-nanofury.Tpo -c -o bfgminer-driver-nanofury.o `test -f 'driver-nanofury.c' || echo '$(srcdir)/'`driver-nanofury.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-nanofury.Tpo $(DEPDIR)/bfgminer-driver-nanofury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-nanofury.c' object='bfgminer-driver-nanofury.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-nanofury.o `test -f 'driver-nanofury.c' || echo '$(srcdir)/'`driver-nanofury.c

bfgminer-driver-nanofury.obj: driver-nanofury.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-nanofury.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-nanofury.Tpo -c -o bfgminer-driver-nanofury.obj `if test -f 'driver-nanofury.c'; then $(CYGPATH_W) 'driver-nanofury.c'; else $(CYGPATH_W) '$(srcdir)/driver-nanofury.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-nanofury.Tpo $(DEPDIR)/bfgminer-driver-nanofury.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-nanofury.c' object='bfgminer-driver-nanofury.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-nanofury.obj `if test -f 'driver-nanofury.c'; then $(CYGPATH_W) 'driver-nanofury.c'; else $(CYGPATH_W) '$(srcdir)/driver-nanofury.c'; fi`

bfgminer-mcp2210.o: mcp2210.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-mcp2210.o -MD -MP -MF $(DEPDIR)/bfgminer-mcp2210.Tpo -c -o bfgminer-mcp2210.o `test -f 'mcp2210.c' || echo '$(srcdir)/'`mcp2210.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-mcp2210.Tpo $(DEPDIR)/bfgminer-mcp2210.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='mcp2210.c' object='bfgminer-mcp2210.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-mcp2210.o `test -f 'mcp2210.c' || echo '$(srcdir)/'`mcp2210.c

bfgminer-mcp2210.obj: mcp2210.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-mcp2210.obj -MD -MP -MF $(DEPDIR)/bfgminer-mcp2210.Tpo -c -o bfgminer-mcp2210.obj `if test -f 'mcp2210.c'; then $(CYGPATH_W) 'mcp2210.c'; else $(CYGPATH_W) '$(srcdir)/mcp2210.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-mcp2210.Tpo $(DEPDIR)/bfgminer-mcp2210.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='mcp2210.c' object='bfgminer-mcp2210.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-mcp2210.obj `if test -f 'mcp2210.c'; then $(CYGPATH_W) 'mcp2210.c'; else $(CYGPATH_W) '$(srcdir)/mcp2210.c'; fi`

bfgminer-driver-hashbuster.o: driver-hashbuster.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-hashbuster.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-hashbuster.Tpo -c -o bfgminer-driver-hashbuster.o `test -f 'driver-hashbuster.c' || echo '$(srcdir)/'`driver-hashbuster.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-hashbuster.Tpo $(DEPDIR)/bfgminer-driver-hashbuster.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-hashbuster.c' object='bfgminer-driver-hashbuster.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-hashbuster.o `test -f 'driver-hashbuster.c' || echo '$(srcdir)/'`driver-hashbuster.c

bfgminer-driver-hashbuster.obj: driver-hashbuster.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-hashbuster.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-hashbuster.Tpo -c -o bfgminer-driver-hashbuster.obj `if test -f 'driver-hashbuster.c'; then $(CYGPATH_W) 'driver-hashbuster.c'; else $(CYGPATH_W) '$(srcdir)/driver-hashbuster.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-hashbuster.Tpo $(DEPDIR)/bfgminer-driver-hashbuster.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-hashbuster.c' object='bfgminer-driver-hashbuster.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-hashbuster.obj `if test -f 'driver-hashbuster.c'; then $(CYGPATH_W) 'driver-hashbuster.c'; else $(CYGPATH_W) '$(srcdir)/driver-hashbuster.c'; fi`

bfgminer-driver-hashbusterusb.o: driver-hashbusterusb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-hashbusterusb.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-hashbusterusb.Tpo -c -o bfgminer-driver-hashbusterusb.o `test -f 'driver-hashbusterusb.c' || echo '$(srcdir)/'`driver-hashbusterusb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-hashbusterusb.Tpo $(DEPDIR)/bfgminer-driver-hashbusterusb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-hashbusterusb.c' object='bfgminer-driver-hashbusterusb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-hashbusterusb.o `test -f 'driver-hashbusterusb.c' || echo '$(srcdir)/'`driver-hashbusterusb.c

bfgminer-driver-hashbusterusb.obj: driver-hashbusterusb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-hashbusterusb.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-hashbusterusb.Tpo -c -o bfgminer-driver-hashbusterusb.obj `if test -f 'driver-hashbusterusb.c'; then $(CYGPATH_W) 'driver-hashbusterusb.c'; else $(CYGPATH_W) '$(srcdir)/driver-hashbusterusb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-hashbusterusb.Tpo $(DEPDIR)/bfgminer-driver-hashbusterusb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-hashbusterusb.c' object='bfgminer-driver-hashbusterusb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-hashbusterusb.obj `if test -f 'driver-hashbusterusb.c'; then $(CYGPATH_W) 'driver-hashbusterusb.c'; else $(CYGPATH_W) '$(srcdir)/driver-hashbusterusb.c'; fi`

bfgminer-driver-cointerra.o: driver-cointerra.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-cointerra.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-cointerra.Tpo -c -o bfgminer-driver-cointerra.o `test -f 'driver-cointerra.c' || echo '$(srcdir)/'`driver-cointerra.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-cointerra.Tpo $(DEPDIR)/bfgminer-driver-cointerra.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-cointerra.c' object='bfgminer-driver-cointerra.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-cointerra.o `test -f 'driver-cointerra.c' || echo '$(srcdir)/'`driver-cointerra.c

bfgminer-driver-cointerra.obj: driver-cointerra.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-cointerra.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-cointerra.Tpo -c -o bfgminer-driver-cointerra.obj `if test -f 'driver-cointerra.c'; then $(CYGPATH_W) 'driver-cointerra.c'; else $(CYGPATH_W) '$(srcdir)/driver-cointerra.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-cointerra.Tpo $(DEPDIR)/bfgminer-driver-cointerra.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-cointerra.c' object='bfgminer-driver-cointerra.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-cointerra.obj `if test -f 'driver-cointerra.c'; then $(CYGPATH_W) 'driver-cointerra.c'; else $(CYGPATH_W) '$(srcdir)/driver-cointerra.c'; fi`

bfgminer-driver-hashfast.o: driver-hashfast.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-hashfast.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-hashfast.Tpo -c -o bfgminer-driver-hashfast.o `test -f 'driver-hashfast.c' || echo '$(srcdir)/'`driver-hashfast.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-hashfast.Tpo $(DEPDIR)/bfgminer-driver-hashfast.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-hashfast.c' object='bfgminer-driver-hashfast.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-hashfast.o `test -f 'driver-hashfast.c' || echo '$(srcdir)/'`driver-hashfast.c

bfgminer-driver-hashfast.obj: driver-hashfast.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-hashfast.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-hashfast.Tpo -c -o bfgminer-driver-hashfast.obj `if test -f 'driver-hashfast.c'; then $(CYGPATH_W) 'driver-hashfast.c'; else $(CYGPATH_W) '$(srcdir)/driver-hashfast.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-hashfast.Tpo $(DEPDIR)/bfgminer-driver-hashfast.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-hashfast.c' object='bfgminer-driver-hashfast.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-hashfast.obj `if test -f 'driver-hashfast.c'; then $(CYGPATH_W) 'driver-hashfast.c'; else $(CYGPATH_W) '$(srcdir)/driver-hashfast.c'; fi`

bfgminer-driver-aan.o: driver-aan.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-aan.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-aan.Tpo -c -o bfgminer-driver-aan.o `test -f 'driver-aan.c' || echo '$(srcdir)/'`driver-aan.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-aan.Tpo $(DEPDIR)/bfgminer-driver-aan.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-aan.c' object='bfgminer-driver-aan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-aan.o `test -f 'driver-aan.c' || echo '$(srcdir)/'`driver-aan.c

bfgminer-driver-aan.obj: driver-aan.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-aan.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-aan.Tpo -c -o bfgminer-driver-aan.obj `if test -f 'driver-aan.c'; then $(CYGPATH_W) 'driver-aan.c'; else $(CYGPATH_W) '$(srcdir)/driver-aan.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-aan.Tpo $(DEPDIR)/bfgminer-driver-aan.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-aan.c' object='bfgminer-driver-aan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-aan.obj `if test -f 'driver-aan.c'; then $(CYGPATH_W) 'driver-aan.c'; else $(CYGPATH_W) '$(srcdir)/driver-aan.c'; fi`

bfgminer-driver-jingtian.o: driver-jingtian.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-jingtian.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-jingtian.Tpo -c -o bfgminer-driver-jingtian.o `test -f 'driver-jingtian.c' || echo '$(srcdir)/'`driver-jingtian.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-jingtian.Tpo $(DEPDIR)/bfgminer-driver-jingtian.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-jingtian.c' object='bfgminer-driver-jingtian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-jingtian.o `test -f 'driver-jingtian.c' || echo '$(srcdir)/'`driver-jingtian.c

bfgminer-driver-jingtian.obj: driver-jingtian.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-jingtian.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-jingtian.Tpo -c -o bfgminer-driver-jingtian.obj `if test -f 'driver-jingtian.c'; then $(CYGPATH_W) 'driver-jingtian.c'; else $(CYGPATH_W) '$(srcdir)/driver-jingtian.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-jingtian.Tpo $(DEPDIR)/bfgminer-driver-jingtian.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-jingtian.c' object='bfgminer-driver-jingtian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-jingtian.obj `if test -f 'driver-jingtian.c'; then $(CYGPATH_W) 'driver-jingtian.c'; else $(CYGPATH_W) '$(srcdir)/driver-jingtian.c'; fi`

bfgminer-driver-minergate.o: driver-minergate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-minergate.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-minergate.Tpo -c -o bfgminer-driver-minergate.o `test -f 'driver-minergate.c' || echo '$(srcdir)/'`driver-minergate.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-minergate.Tpo $(DEPDIR)/bfgminer-driver-minergate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-minergate.c' object='bfgminer-driver-minergate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-minergate.o `test -f 'driver-minergate.c' || echo '$(srcdir)/'`driver-minergate.c

bfgminer-driver-minergate.obj: driver-minergate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-minergate.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-minergate.Tpo -c -o bfgminer-driver-minergate.obj `if test -f 'driver-minergate.c'; then $(CYGPATH_W) 'driver-minergate.c'; else $(CYGPATH_W) '$(srcdir)/driver-minergate.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-minergate.Tpo $(DEPDIR)/bfgminer-driver-minergate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-minergate.c' object='bfgminer-driver-minergate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-minergate.obj `if test -f 'driver-minergate.c'; then $(CYGPATH_W) 'driver-minergate.c'; else $(CYGPATH_W) '$(srcdir)/driver-minergate.c'; fi`

bfgminer-driver-minion.o: driver-minion.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-minion.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-minion.Tpo -c -o bfgminer-driver-minion.o `test -f 'driver-minion.c' || echo '$(srcdir)/'`driver-minion.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-minion.Tpo $(DEPDIR)/bfgminer-driver-minion.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-minion.c' object='bfgminer-driver-minion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-minion.o `test -f 'driver-minion.c' || echo '$(srcdir)/'`driver-minion.c

bfgminer-driver-minion.obj: driver-minion.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-minion.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-minion.Tpo -c -o bfgminer-driver-minion.obj `if test -f 'driver-minion.c'; then $(CYGPATH_W) 'driver-minion.c'; else $(CYGPATH_W) '$(srcdir)/driver-minion.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-minion.Tpo $(DEPDIR)/bfgminer-driver-minion.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-minion.c' object='bfgminer-driver-minion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-minion.obj `if test -f 'driver-minion.c'; then $(CYGPATH_W) 'driver-minion.c'; else $(CYGPATH_W) '$(srcdir)/driver-minion.c'; fi`

bfgminer-driver-rockminer.o: driver-rockminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-rockminer.o -MD -MP -MF $(DEPDIR)/bfgminer-driver-rockminer.Tpo -c -o bfgminer-driver-rockminer.o `test -f 'driver-rockminer.c' || echo '$(srcdir)/'`driver-rockminer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-rockminer.Tpo $(DEPDIR)/bfgminer-driver-rockminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-rockminer.c' object='bfgminer-driver-rockminer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-rockminer.o `test -f 'driver-rockminer.c' || echo '$(srcdir)/'`driver-rockminer.c

bfgminer-driver-rockminer.obj: driver-rockminer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-driver-rockminer.obj -MD -MP -MF $(DEPDIR)/bfgminer-driver-rockminer.Tpo -c -o bfgminer-driver-rockminer.obj `if test -f 'driver-rockminer.c'; then $(CYGPATH_W) 'driver-rockminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-rockminer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-driver-rockminer.Tpo $(DEPDIR)/bfgminer-driver-rockminer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='driver-rockminer.c' object='bfgminer-driver-rockminer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-driver-rockminer.obj `if test -f 'driver-rockminer.c'; then $(CYGPATH_W) 'driver-rockminer.c'; else $(CYGPATH_W) '$(srcdir)/driver-rockminer.c'; fi`

bfgminer-lowl-ftdi.o: lowl-ftdi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-ftdi.o -MD -MP -MF $(DEPDIR)/bfgminer-lowl-ftdi.Tpo -c -o bfgminer-lowl-ftdi.o `test -f 'lowl-ftdi.c' || echo '$(srcdir)/'`lowl-ftdi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-ftdi.Tpo $(DEPDIR)/bfgminer-lowl-ftdi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-ftdi.c' object='bfgminer-lowl-ftdi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-ftdi.o `test -f 'lowl-ftdi.c' || echo '$(srcdir)/'`lowl-ftdi.c

bfgminer-lowl-ftdi.obj: lowl-ftdi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-ftdi.obj -MD -MP -MF $(DEPDIR)/bfgminer-lowl-ftdi.Tpo -c -o bfgminer-lowl-ftdi.obj `if test -f 'lowl-ftdi.c'; then $(CYGPATH_W) 'lowl-ftdi.c'; else $(CYGPATH_W) '$(srcdir)/lowl-ftdi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-ftdi.Tpo $(DEPDIR)/bfgminer-lowl-ftdi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-ftdi.c' object='bfgminer-lowl-ftdi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-ftdi.obj `if test -f 'lowl-ftdi.c'; then $(CYGPATH_W) 'lowl-ftdi.c'; else $(CYGPATH_W) '$(srcdir)/lowl-ftdi.c'; fi`

bfgminer-lowl-hid.o: lowl-hid.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-hid.o -MD -MP -MF $(DEPDIR)/bfgminer-lowl-hid.Tpo -c -o bfgminer-lowl-hid.o `test -f 'lowl-hid.c' || echo '$(srcdir)/'`lowl-hid.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-hid.Tpo $(DEPDIR)/bfgminer-lowl-hid.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-hid.c' object='bfgminer-lowl-hid.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-hid.o `test -f 'lowl-hid.c' || echo '$(srcdir)/'`lowl-hid.c

bfgminer-lowl-hid.obj: lowl-hid.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-hid.obj -MD -MP -MF $(DEPDIR)/bfgminer-lowl-hid.Tpo -c -o bfgminer-lowl-hid.obj `if test -f 'lowl-hid.c'; then $(CYGPATH_W) 'lowl-hid.c'; else $(CYGPATH_W) '$(srcdir)/lowl-hid.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-hid.Tpo $(DEPDIR)/bfgminer-lowl-hid.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-hid.c' object='bfgminer-lowl-hid.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-hid.obj `if test -f 'lowl-hid.c'; then $(CYGPATH_W) 'lowl-hid.c'; else $(CYGPATH_W) '$(srcdir)/lowl-hid.c'; fi`

bfgminer-lowl-mswin.o: lowl-mswin.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-mswin.o -MD -MP -MF $(DEPDIR)/bfgminer-lowl-mswin.Tpo -c -o bfgminer-lowl-mswin.o `test -f 'lowl-mswin.c' || echo '$(srcdir)/'`lowl-mswin.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-mswin.Tpo $(DEPDIR)/bfgminer-lowl-mswin.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-mswin.c' object='bfgminer-lowl-mswin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-mswin.o `test -f 'lowl-mswin.c' || echo '$(srcdir)/'`lowl-mswin.c

bfgminer-lowl-mswin.obj: lowl-mswin.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-mswin.obj -MD -MP -MF $(DEPDIR)/bfgminer-lowl-mswin.Tpo -c -o bfgminer-lowl-mswin.obj `if test -f 'lowl-mswin.c'; then $(CYGPATH_W) 'lowl-mswin.c'; else $(CYGPATH_W) '$(srcdir)/lowl-mswin.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-mswin.Tpo $(DEPDIR)/bfgminer-lowl-mswin.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-mswin.c' object='bfgminer-lowl-mswin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-mswin.obj `if test -f 'lowl-mswin.c'; then $(CYGPATH_W) 'lowl-mswin.c'; else $(CYGPATH_W) '$(srcdir)/lowl-mswin.c'; fi`

bfgminer-lowl-pci.o: lowl-pci.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-pci.o -MD -MP -MF $(DEPDIR)/bfgminer-lowl-pci.Tpo -c -o bfgminer-lowl-pci.o `test -f 'lowl-pci.c' || echo '$(srcdir)/'`lowl-pci.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-pci.Tpo $(DEPDIR)/bfgminer-lowl-pci.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-pci.c' object='bfgminer-lowl-pci.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-pci.o `test -f 'lowl-pci.c' || echo '$(srcdir)/'`lowl-pci.c

bfgminer-lowl-pci.obj: lowl-pci.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-pci.obj -MD -MP -MF $(DEPDIR)/bfgminer-lowl-pci.Tpo -c -o bfgminer-lowl-pci.obj `if test -f 'lowl-pci.c'; then $(CYGPATH_W) 'lowl-pci.c'; else $(CYGPATH_W) '$(srcdir)/lowl-pci.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-pci.Tpo $(DEPDIR)/bfgminer-lowl-pci.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-pci.c' object='bfgminer-lowl-pci.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-pci.obj `if test -f 'lowl-pci.c'; then $(CYGPATH_W) 'lowl-pci.c'; else $(CYGPATH_W) '$(srcdir)/lowl-pci.c'; fi`

bfgminer-lowl-spi.o: lowl-spi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-spi.o -MD -MP -MF $(DEPDIR)/bfgminer-lowl-spi.Tpo -c -o bfgminer-lowl-spi.o `test -f 'lowl-spi.c' || echo '$(srcdir)/'`lowl-spi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-spi.Tpo $(DEPDIR)/bfgminer-lowl-spi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-spi.c' object='bfgminer-lowl-spi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-spi.o `test -f 'lowl-spi.c' || echo '$(srcdir)/'`lowl-spi.c

bfgminer-lowl-spi.obj: lowl-spi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bfgminer-lowl-spi.obj -MD -MP -MF $(DEPDIR)/bfgminer-lowl-spi.Tpo -c -o bfgminer-lowl-spi.obj `if test -f 'lowl-spi.c'; then $(CYGPATH_W) 'lowl-spi.c'; else $(CYGPATH_W) '$(srcdir)/lowl-spi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bfgminer-lowl-spi.Tpo $(DEPDIR)/bfgminer-lowl-spi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='lowl-spi.c' object='bfgminer-lowl-spi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bfgminer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bfgminer-lowl-spi.obj `if test -f 'lowl-spi.c'; then $(CYGPATH_W) 'lowl-spi.c'; else $(CYGPATH_W) '$(srcdir)/lowl-spi.c'; fi`
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-dist_kernelsDATA: $(dist_kernels_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_kernels_DATA)'; test -n "$(kernelsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(kernelsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(kernelsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(kernelsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(kernelsdir)" || exit $$?; \
	done

uninstall-dist_kernelsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_kernels_DATA)'; test -n "$(kernelsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(kernelsdir)'; $(am__uninstall_files_from_dir)
install-dist_rpcexamplesDATA: $(dist_rpcexamples_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_rpcexamples_DATA)'; test -n "$(rpcexamplesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(rpcexamplesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(rpcexamplesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(rpcexamplesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(rpcexamplesdir)" || exit $$?; \
	done

uninstall-dist_rpcexamplesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_rpcexamples_DATA)'; test -n "$(rpcexamplesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(rpcexamplesdir)'; $(am__uninstall_files_from_dir)
install-dist_udevrulesDATA: $(dist_udevrules_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_udevrules_DATA)'; test -n "$(udevrulesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(udevrulesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(udevrulesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(udevrulesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(udevrulesdir)" || exit $$?; \
	done

uninstall-dist_udevrulesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_udevrules_DATA)'; test -n "$(udevrulesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(udevrulesdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.sh.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.sh$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(DATA) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(kernelsdir)" "$(DESTDIR)$(rpcexamplesdir)" "$(DESTDIR)$(udevrulesdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f knc-asic/$(DEPDIR)/$(am__dirstamp)
	-rm -f knc-asic/$(am__dirstamp)
	-rm -f malgo/$(DEPDIR)/$(am__dirstamp)
	-rm -f malgo/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR) knc-asic/$(DEPDIR) malgo/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_docDATA install-dist_kernelsDATA \
	install-dist_rpcexamplesDATA install-dist_udevrulesDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-sbinSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR) knc-asic/$(DEPDIR) malgo/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_docDATA uninstall-dist_kernelsDATA \
	uninstall-dist_rpcexamplesDATA uninstall-dist_udevrulesDATA \
	uninstall-sbinSCRIPTS

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-TESTS check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-noinstLIBRARIES cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-hdr distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-dist_docDATA \
	install-dist_kernelsDATA install-dist_rpcexamplesDATA \
	install-dist_udevrulesDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-sbinSCRIPTS \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_docDATA uninstall-dist_kernelsDATA \
	uninstall-dist_rpcexamplesDATA uninstall-dist_udevrulesDATA \
	uninstall-sbinSCRIPTS

.PRECIOUS: Makefile


# Without a redirected rule, code depending on different lib/*.h files may try to build dependencies of that in parallel, which can fail
lib/%: lib_directory
	@test -e $@
lib_directory:
	$(MAKE) -C lib
ccan.bfg/libccan.a:
	$(MAKE) -C ccan.bfg $*

.PHONY: update-version
update-version:
	( cd $(top_srcdir) && $(top_srcdir)/gen-version.sh ) >version.h.new
	cmp $(top_srcdir)/version.h version.h.new && rm version.h.new || mv version.h.new $(top_srcdir)/version.h
version.h: update-version
@BUNDLED_LIB_RULES@
@HAS_YASM_TRUE@@HAVE_x86_64_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@x86_64/libx8664.a:
@HAS_YASM_TRUE@@HAVE_x86_64_TRUE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	$(MAKE) -C x86_64 $*
@HAS_YASM_TRUE@@HAVE_x86_64_FALSE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@x86_32/libx8632.a:
@HAS_YASM_TRUE@@HAVE_x86_64_FALSE@@USE_CPUMINING_TRUE@@USE_SHA256D_TRUE@	$(MAKE) -C x86_32 $*

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
